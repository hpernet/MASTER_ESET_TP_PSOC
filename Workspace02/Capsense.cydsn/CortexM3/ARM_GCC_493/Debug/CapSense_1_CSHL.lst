ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_1_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CapSense_1_BaseInit,"ax",%progbits
  19              		.align	2
  20              		.global	CapSense_1_BaseInit
  21              		.thumb
  22              		.thumb_func
  23              		.type	CapSense_1_BaseInit, %function
  24              	CapSense_1_BaseInit:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 2


  32:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 
  50:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 
  54:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     10u, 
  58:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     5u, 
  62:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* ProximitySensor0__PROX */
  70:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  71:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  72:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  74:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* ProximitySensor0__PROX */
  75:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  76:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  77:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  79:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  81:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
  82:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
  83:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  84:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  85:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
  86:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
  87:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
  88:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 3


  89:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
  90:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
  91:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
  92:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
  93:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
  94:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
  95:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  96:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
  97:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
  98:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  99:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  27              		.loc 1 122 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33 0000 10B4     		push	{r4}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 4, -4
 123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
  36              		.loc 1 125 0
  37 0002 0B4B     		ldr	r3, .L3
  38 0004 195C     		ldrb	r1, [r3, r0]	@ zero_extendqisi2
  39              	.LVL1:
 126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 4


 133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
  40              		.loc 1 139 0
  41 0006 0B4B     		ldr	r3, .L3+4
  42 0008 33F81030 		ldrh	r3, [r3, r0, lsl #1]
  43 000c 0A4A     		ldr	r2, .L3+8
  44 000e 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
  45              		.loc 1 140 0
  46 0012 0022     		movs	r2, #0
  47 0014 094C     		ldr	r4, .L3+12
  48 0016 2254     		strb	r2, [r4, r0]
 141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
  49              		.loc 1 141 0
  50 0018 094C     		ldr	r4, .L3+16
  51 001a 2254     		strb	r2, [r4, r0]
 142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_debounceCounter[widget] =  CapSense_1_debounce[widget];
  52              		.loc 1 143 0
  53 001c 0524     		movs	r4, #5
  54 001e 094A     		ldr	r2, .L3+20
  55 0020 5454     		strb	r4, [r2, r1]
 144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
 154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
 157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
  56              		.loc 1 158 0
  57 0022 094A     		ldr	r2, .L3+24
  58 0024 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 5


  59              		.loc 1 170 0
  60 0028 5DF8044B 		ldr	r4, [sp], #4
  61              		.cfi_restore 4
  62              		.cfi_def_cfa_offset 0
  63 002c 7047     		bx	lr
  64              	.L4:
  65 002e 00BF     		.align	2
  66              	.L3:
  67 0030 00000000 		.word	CapSense_1_widgetNumber
  68 0034 00000000 		.word	CapSense_1_sensorRaw
  69 0038 00000000 		.word	CapSense_1_sensorBaseline
  70 003c 00000000 		.word	CapSense_1_sensorBaselineLow
  71 0040 00000000 		.word	CapSense_1_sensorSignal
  72 0044 00000000 		.word	.LANCHOR0
  73 0048 00000000 		.word	CapSense_1_rawFilterData1
  74              		.cfi_endproc
  75              	.LFE0:
  76              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
  77              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
  78              		.align	2
  79              		.global	CapSense_1_InitializeSensorBaseline
  80              		.thumb
  81              		.thumb_func
  82              		.type	CapSense_1_InitializeSensorBaseline, %function
  83              	CapSense_1_InitializeSensorBaseline:
  84              	.LFB1:
 171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
 175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
 183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
  85              		.loc 1 196 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL2:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 6


  90 0000 10B5     		push	{r4, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
  94 0002 0446     		mov	r4, r0
 197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
  95              		.loc 1 198 0
  96 0004 FFF7FEFF 		bl	CapSense_1_ScanSensor
  97              	.LVL3:
  98              	.L6:
 199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
  99              		.loc 1 199 0 discriminator 1
 100 0008 FFF7FEFF 		bl	CapSense_1_IsBusy
 101              	.LVL4:
 102 000c 0028     		cmp	r0, #0
 103 000e FBD1     		bne	.L6
 200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
 104              		.loc 1 206 0
 105 0010 2046     		mov	r0, r4
 106 0012 FFF7FEFF 		bl	CapSense_1_BaseInit
 107              	.LVL5:
 108 0016 10BD     		pop	{r4, pc}
 109              		.cfi_endproc
 110              	.LFE1:
 111              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 112              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 113              		.align	2
 114              		.global	CapSense_1_InitializeAllBaselines
 115              		.thumb
 116              		.thumb_func
 117              		.type	CapSense_1_InitializeAllBaselines, %function
 118              	CapSense_1_InitializeAllBaselines:
 119              	.LFB2:
 207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
 223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 7


 224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 120              		.loc 1 248 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124 0000 10B5     		push	{r4, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128              	.LVL6:
 249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 129              		.loc 1 252 0
 130 0002 0024     		movs	r4, #0
 131 0004 04E0     		b	.L9
 132              	.LVL7:
 133              	.L10:
 253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 134              		.loc 1 254 0 discriminator 3
 135 0006 2046     		mov	r0, r4
 136 0008 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 137              	.LVL8:
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 138              		.loc 1 252 0 discriminator 3
 139 000c 0134     		adds	r4, r4, #1
 140              	.LVL9:
 141 000e E4B2     		uxtb	r4, r4
 142              	.LVL10:
 143              	.L9:
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 8


 144              		.loc 1 252 0 is_stmt 0 discriminator 1
 145 0010 002C     		cmp	r4, #0
 146 0012 F8D0     		beq	.L10
 255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 147              		.loc 1 256 0 is_stmt 1
 148 0014 10BD     		pop	{r4, pc}
 149              		.cfi_endproc
 150              	.LFE2:
 151              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 152 0016 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 153              		.align	2
 154              		.global	CapSense_1_InitializeEnabledBaselines
 155              		.thumb
 156              		.thumb_func
 157              		.type	CapSense_1_InitializeEnabledBaselines, %function
 158              	CapSense_1_InitializeEnabledBaselines:
 159              	.LFB3:
 257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 160              		.loc 1 281 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 10B5     		push	{r4, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 168              		.loc 1 286 0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 9


 169 0002 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 170              	.LVL11:
 171              	.L13:
 287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 172              		.loc 1 287 0 discriminator 1
 173 0006 FFF7FEFF 		bl	CapSense_1_IsBusy
 174              	.LVL12:
 175 000a 0028     		cmp	r0, #0
 176 000c FBD1     		bne	.L13
 177 000e 0024     		movs	r4, #0
 178 0010 11E0     		b	.L14
 179              	.LVL13:
 180              	.L16:
 288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 181              		.loc 1 294 0
 182 0012 E208     		lsrs	r2, r4, #3
 295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 183              		.loc 1 295 0
 184 0014 04F00701 		and	r1, r4, #7
 185 0018 0123     		movs	r3, #1
 186 001a 8B40     		lsls	r3, r3, r1
 187              	.LVL14:
 296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 188              		.loc 1 298 0
 189 001c 0749     		ldr	r1, .L18
 190 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 191 0020 1342     		tst	r3, r2
 192 0022 03D1     		bne	.L15
 299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 193              		.loc 1 300 0
 194 0024 0022     		movs	r2, #0
 195 0026 064B     		ldr	r3, .L18+4
 196              	.LVL15:
 197 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 198              	.L15:
 301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
 304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 199              		.loc 1 304 0 discriminator 2
 200 002c 2046     		mov	r0, r4
 201 002e FFF7FEFF 		bl	CapSense_1_BaseInit
 202              	.LVL16:
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 203              		.loc 1 292 0 discriminator 2
 204 0032 0134     		adds	r4, r4, #1
 205              	.LVL17:
 206 0034 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 10


 207              	.LVL18:
 208              	.L14:
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 209              		.loc 1 292 0 is_stmt 0 discriminator 1
 210 0036 002C     		cmp	r4, #0
 211 0038 EBD0     		beq	.L16
 305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
 212              		.loc 1 306 0 is_stmt 1
 213 003a 10BD     		pop	{r4, pc}
 214              	.LVL19:
 215              	.L19:
 216              		.align	2
 217              	.L18:
 218 003c 00000000 		.word	CapSense_1_sensorEnableMask
 219 0040 00000000 		.word	CapSense_1_sensorRaw
 220              		.cfi_endproc
 221              	.LFE3:
 222              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 223              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 224              		.align	2
 225              		.global	CapSense_1_CheckIsSensorActive
 226              		.thumb
 227              		.thumb_func
 228              		.type	CapSense_1_CheckIsSensorActive, %function
 229              	CapSense_1_CheckIsSensorActive:
 230              	.LFB6:
 307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 11


 337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
 362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 12


 394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
 407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 13


 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
 470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
 498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 14


 508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 15


 565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
 579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 231              		.loc 1 579 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL20:
 237 0000 30B4     		push	{r4, r5}
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 5, -4
 580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
 241              		.loc 1 582 0
 242 0002 C208     		lsrs	r2, r0, #3
 243              	.LVL21:
 583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 244              		.loc 1 583 0
 245 0004 00F00701 		and	r1, r0, #7
 246 0008 0123     		movs	r3, #1
 247 000a 8B40     		lsls	r3, r3, r1
 248 000c DBB2     		uxtb	r3, r3
 249              	.LVL22:
 584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 250              		.loc 1 585 0
 251 000e 1549     		ldr	r1, .L27
 252 0010 0C5C     		ldrb	r4, [r1, r0]	@ zero_extendqisi2
 253              	.LVL23:
 586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 fingerThreshold = CapSense_1_fingerThreshold[widget];
 587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 hysteresis = CapSense_1_hysteresis[widget];
 588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     debounceIndex = widget;
 591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 254              		.loc 1 594 0
 255 0012 1549     		ldr	r1, .L27+4
 256 0014 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 257 0016 1942     		tst	r1, r3
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 16


 258 0018 0BD0     		beq	.L21
 595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 259              		.loc 1 597 0
 260 001a 144D     		ldr	r5, .L27+8
 261 001c 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 262              	.LVL24:
 263 001e 5928     		cmp	r0, #89
 264 0020 19DC     		bgt	.L22
 598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 265              		.loc 1 599 0
 266 0022 21EA0301 		bic	r1, r1, r3
 267 0026 1048     		ldr	r0, .L27+4
 268 0028 8154     		strb	r1, [r0, r2]
 600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
 269              		.loc 1 600 0
 270 002a 0520     		movs	r0, #5
 271 002c 1049     		ldr	r1, .L27+12
 272 002e 0855     		strb	r0, [r1, r4]
 273 0030 11E0     		b	.L22
 274              	.LVL25:
 275              	.L21:
 601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 276              		.loc 1 606 0
 277 0032 0E4D     		ldr	r5, .L27+8
 278 0034 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 279              	.LVL26:
 280 0036 6E28     		cmp	r0, #110
 281 0038 0ADD     		ble	.L23
 607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
 282              		.loc 1 609 0
 283 003a 0D48     		ldr	r0, .L27+12
 284 003c 005D     		ldrb	r0, [r0, r4]	@ zero_extendqisi2
 285 003e 0128     		cmp	r0, #1
 286 0040 02D8     		bhi	.L24
 610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 287              		.loc 1 611 0
 288 0042 1943     		orrs	r1, r1, r3
 289 0044 084D     		ldr	r5, .L27+4
 290 0046 A954     		strb	r1, [r5, r2]
 291              	.L24:
 612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
 292              		.loc 1 613 0
 293 0048 0138     		subs	r0, r0, #1
 294 004a 0949     		ldr	r1, .L27+12
 295 004c 0855     		strb	r0, [r1, r4]
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 17


 296 004e 02E0     		b	.L22
 297              	.L23:
 614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 298              		.loc 1 618 0
 299 0050 0520     		movs	r0, #5
 300 0052 0749     		ldr	r1, .L27+12
 301 0054 0855     		strb	r0, [r1, r4]
 302              	.L22:
 619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 303              		.loc 1 622 0
 304 0056 0449     		ldr	r1, .L27+4
 305 0058 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 306 005a 1840     		ands	r0, r0, r3
 307 005c 00D0     		beq	.L25
 308 005e 0120     		movs	r0, #1
 309              	.L25:
 623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 310              		.loc 1 623 0 discriminator 4
 311 0060 30BC     		pop	{r4, r5}
 312              		.cfi_restore 5
 313              		.cfi_restore 4
 314              		.cfi_def_cfa_offset 0
 315              	.LVL27:
 316 0062 7047     		bx	lr
 317              	.L28:
 318              		.align	2
 319              	.L27:
 320 0064 00000000 		.word	CapSense_1_widgetNumber
 321 0068 00000000 		.word	CapSense_1_sensorOnMask
 322 006c 00000000 		.word	CapSense_1_sensorSignal
 323 0070 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE6:
 326              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 327              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_CheckIsWidgetActive
 330              		.thumb
 331              		.thumb_func
 332              		.type	CapSense_1_CheckIsWidgetActive, %function
 333              	CapSense_1_CheckIsWidgetActive:
 334              	.LFB7:
 624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 18


 632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 335              		.loc 1 651 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL28:
 340 0000 08B5     		push	{r3, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 3, -8
 343              		.cfi_offset 14, -4
 344              	.LVL29:
 652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
 345              		.loc 1 659 0
 346 0002 0020     		movs	r0, #0
 347              	.LVL30:
 348 0004 FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 349              	.LVL31:
 350 0008 00B1     		cbz	r0, .L30
 660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 351              		.loc 1 661 0
 352 000a 0120     		movs	r0, #1
 353              	.L30:
 354              	.LVL32:
 662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 19


 669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 355              		.loc 1 670 0
 356 000c 08BD     		pop	{r3, pc}
 357              		.cfi_endproc
 358              	.LFE7:
 359              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 360 000e 00BF     		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 361              		.align	2
 362              		.global	CapSense_1_CheckIsAnyWidgetActive
 363              		.thumb
 364              		.thumb_func
 365              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 366              	CapSense_1_CheckIsAnyWidgetActive:
 367              	.LFB8:
 671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
 681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 368              		.loc 1 695 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 38B5     		push	{r3, r4, r5, lr}
 373              		.cfi_def_cfa_offset 16
 374              		.cfi_offset 3, -16
 375              		.cfi_offset 4, -12
 376              		.cfi_offset 5, -8
 377              		.cfi_offset 14, -4
 378              	.LVL33:
 696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 379              		.loc 1 697 0
 380 0002 0025     		movs	r5, #0
 698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 20


 381              		.loc 1 699 0
 382 0004 2C46     		mov	r4, r5
 383 0006 06E0     		b	.L34
 384              	.LVL34:
 385              	.L36:
 700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 386              		.loc 1 701 0
 387 0008 2046     		mov	r0, r4
 388 000a FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 389              	.LVL35:
 390 000e 00B1     		cbz	r0, .L35
 702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 391              		.loc 1 703 0
 392 0010 0125     		movs	r5, #1
 393              	.LVL36:
 394              	.L35:
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 395              		.loc 1 699 0 discriminator 2
 396 0012 0134     		adds	r4, r4, #1
 397              	.LVL37:
 398 0014 E4B2     		uxtb	r4, r4
 399              	.LVL38:
 400              	.L34:
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 401              		.loc 1 699 0 is_stmt 0 discriminator 1
 402 0016 002C     		cmp	r4, #0
 403 0018 F6D0     		beq	.L36
 704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 404              		.loc 1 709 0 is_stmt 1
 405 001a 2846     		mov	r0, r5
 406 001c 38BD     		pop	{r3, r4, r5, pc}
 407              		.cfi_endproc
 408              	.LFE8:
 409              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 410 001e 00BF     		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 411              		.align	2
 412              		.global	CapSense_1_EnableWidget
 413              		.thumb
 414              		.thumb_func
 415              		.type	CapSense_1_EnableWidget, %function
 416              	CapSense_1_EnableWidget:
 417              	.LFB9:
 710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 21


 718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 418              		.loc 1 741 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 423              	.LVL39:
 742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
 424              		.loc 1 753 0
 425 0000 024A     		ldr	r2, .L40
 426 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 427 0004 43F00103 		orr	r3, r3, #1
 428 0008 1370     		strb	r3, [r2]
 429              	.LVL40:
 430 000a 7047     		bx	lr
 431              	.L41:
 432              		.align	2
 433              	.L40:
 434 000c 00000000 		.word	CapSense_1_sensorEnableMask
 435              		.cfi_endproc
 436              	.LFE9:
 437              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 438              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 22


 439              		.align	2
 440              		.global	CapSense_1_DisableWidget
 441              		.thumb
 442              		.thumb_func
 443              		.type	CapSense_1_DisableWidget, %function
 444              	CapSense_1_DisableWidget:
 445              	.LFB10:
 754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 446              		.loc 1 791 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL41:
 792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 23


 798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
 452              		.loc 1 803 0
 453 0000 024A     		ldr	r2, .L43
 454 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 455 0004 23F00103 		bic	r3, r3, #1
 456 0008 1370     		strb	r3, [r2]
 457              	.LVL42:
 458 000a 7047     		bx	lr
 459              	.L44:
 460              		.align	2
 461              	.L43:
 462 000c 00000000 		.word	CapSense_1_sensorEnableMask
 463              		.cfi_endproc
 464              	.LFE10:
 465              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 466              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 467              		.align	2
 468              		.global	CapSense_1_IIR4Filter
 469              		.thumb
 470              		.thumb_func
 471              		.type	CapSense_1_IIR4Filter, %function
 472              	CapSense_1_IIR4Filter:
 473              	.LFB11:
 804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
 813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
 820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 24


 833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 
 837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
 847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
 850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
 861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 25


 890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
 898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
 906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
 918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
 934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 26


 947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 960:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 961:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 962:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 963:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 964:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 965:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 966:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 967:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 968:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 969:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 970:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
 971:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 972:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 973:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 974:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 975:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
 976:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 977:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 978:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
 979:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
 980:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
 982:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
 983:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 984:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
 985:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 986:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 987:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 988:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
 989:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 990:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 991:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
 992:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
 993:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 994:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 995:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
 996:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
 997:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
 998:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 999:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1000:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
1001:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
1002:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1003:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 27


1004:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1005:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1006:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1007:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1008:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1009:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint8 CapSense_1_centroid[3u];
1010:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1011:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1012:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1013:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1014:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
1015:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1016:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1017:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1018:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1019:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1020:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1021:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1022:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1023:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1024:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1025:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1026:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1027:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1028:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1029:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1030:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1031:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1032:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1033:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1034:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1035:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1036:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1037:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1038:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1039:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1040:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1041:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1042:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1043:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1044:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1045:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1046:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1047:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1048:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1049:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1050:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1051:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1052:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1053:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1054:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1055:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1056:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1057:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1058:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1059:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1060:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 28


1061:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1062:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1063:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1064:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1065:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1066:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1067:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1068:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1069:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1070:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1071:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1072:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1073:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
1074:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1075:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1076:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1077:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
1078:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1079:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1080:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1081:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1082:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1083:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1084:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1085:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1086:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1087:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1088:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1089:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1090:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1091:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1092:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1093:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1094:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1095:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1096:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1097:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1098:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1099:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
1101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
1102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
1111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
1113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
1117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 29


1118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
1121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
1124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
1126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
1130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
1135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
1136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
1139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
1140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
1141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
1144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
1154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
1157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
1160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
1161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 30


1175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
1210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 31


1232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 32


1289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 33


1346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 34


1403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 35


1460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 36


1517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
1530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
1572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 37


1574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
1587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
1618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 38


1631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
1644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
1647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
1659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
1675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
1686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 39


1688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
1701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 40


1745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
1789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 41


1802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
1816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
1818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
1830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 42


1859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 43


1916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 474              		.loc 1 1936 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
 479              	.LVL43:
1937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 480              		.loc 1 1940 0
 481 0000 00EB4100 		add	r0, r0, r1, lsl #1
 482              	.LVL44:
1941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 483              		.loc 1 1941 0
 484 0004 0844     		add	r0, r0, r1
 485              	.LVL45:
1942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
1943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 486              		.loc 1 1945 0
 487 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 488              	.LVL46:
 489 000a 7047     		bx	lr
 490              		.cfi_endproc
 491              	.LFE11:
 492              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 493              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 494              		.align	2
 495              		.global	CapSense_1_UpdateSensorBaseline
 496              		.thumb
 497              		.thumb_func
 498              		.type	CapSense_1_UpdateSensorBaseline, %function
 499              	CapSense_1_UpdateSensorBaseline:
 500              	.LFB4:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 44


 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 501              		.loc 1 348 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL47:
 506 0000 70B5     		push	{r4, r5, r6, lr}
 507              		.cfi_def_cfa_offset 16
 508              		.cfi_offset 4, -16
 509              		.cfi_offset 5, -12
 510              		.cfi_offset 6, -8
 511              		.cfi_offset 14, -4
 512 0002 0446     		mov	r4, r0
 513              	.LVL48:
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 514              		.loc 1 382 0
 515 0004 254D     		ldr	r5, .L57
 516 0006 264B     		ldr	r3, .L57+4
 517 0008 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 518              	.LVL49:
 519 000c 35F81410 		ldrh	r1, [r5, r4, lsl #1]
 520 0010 FFF7FEFF 		bl	CapSense_1_IIR4Filter
 521              	.LVL50:
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 522              		.loc 1 383 0
 523 0014 25F81400 		strh	r0, [r5, r4, lsl #1]	@ movhi
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 524              		.loc 1 408 0
 525 0018 224B     		ldr	r3, .L57+8
 526 001a 33F81420 		ldrh	r2, [r3, r4, lsl #1]
 527 001e 8242     		cmp	r2, r0
 528 0020 03D8     		bhi	.L47
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 529              		.loc 1 410 0
 530 0022 851A     		subs	r5, r0, r2
 531 0024 ADB2     		uxth	r5, r5
 532              	.LVL51:
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 533              		.loc 1 411 0
 534 0026 0126     		movs	r6, #1
 535 0028 02E0     		b	.L48
 536              	.LVL52:
 537              	.L47:
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 538              		.loc 1 415 0
 539 002a 151A     		subs	r5, r2, r0
 540 002c ADB2     		uxth	r5, r5
 541              	.LVL53:
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 542              		.loc 1 416 0
 543 002e 0026     		movs	r6, #0
 544              	.LVL54:
 545              	.L48:
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 546              		.loc 1 419 0
 547 0030 86B9     		cbnz	r6, .L49
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 45


 548              		.loc 1 419 0 is_stmt 0 discriminator 1
 549 0032 142D     		cmp	r5, #20
 550 0034 0ED9     		bls	.L49
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 551              		.loc 1 421 0 is_stmt 1
 552 0036 1C4B     		ldr	r3, .L57+12
 553 0038 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 554 003a 042B     		cmp	r3, #4
 555 003c 06D9     		bls	.L50
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 556              		.loc 1 423 0
 557 003e 2046     		mov	r0, r4
 558              	.LVL55:
 559 0040 FFF7FEFF 		bl	CapSense_1_BaseInit
 560              	.LVL56:
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 561              		.loc 1 424 0
 562 0044 0022     		movs	r2, #0
 563 0046 184B     		ldr	r3, .L57+12
 564 0048 1A55     		strb	r2, [r3, r4]
 565 004a 17E0     		b	.L51
 566              	.LVL57:
 567              	.L50:
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 568              		.loc 1 428 0
 569 004c 0133     		adds	r3, r3, #1
 570 004e 164A     		ldr	r2, .L57+12
 571 0050 1355     		strb	r3, [r2, r4]
 572 0052 13E0     		b	.L51
 573              	.L49:
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 574              		.loc 1 435 0
 575 0054 142D     		cmp	r5, #20
 576 0056 02D9     		bls	.L52
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 577              		.loc 1 435 0 is_stmt 0 discriminator 1
 578 0058 132D     		cmp	r5, #19
 579 005a 0FD8     		bhi	.L51
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 580              		.loc 1 437 0 is_stmt 1
 581 005c 76B9     		cbnz	r6, .L51
 582              	.L52:
 583              	.LVL58:
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 584              		.loc 1 442 0
 585 005e 1349     		ldr	r1, .L57+16
 586 0060 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 587 0062 43EA0223 		orr	r3, r3, r2, lsl #8
 588              	.LVL59:
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 589              		.loc 1 445 0
 590 0066 1844     		add	r0, r0, r3
 591              	.LVL60:
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 592              		.loc 1 448 0
 593 0068 801A     		subs	r0, r0, r2
 594              	.LVL61:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 46


 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 595              		.loc 1 451 0
 596 006a C0F30F22 		ubfx	r2, r0, #8, #16
 597 006e 0D4B     		ldr	r3, .L57+8
 598 0070 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 599              		.loc 1 452 0
 600 0074 0855     		strb	r0, [r1, r4]
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 601              		.loc 1 454 0
 602 0076 0022     		movs	r2, #0
 603 0078 0B4B     		ldr	r3, .L57+12
 604 007a 1A55     		strb	r2, [r3, r4]
 605              	.LVL62:
 606              	.L51:
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 607              		.loc 1 461 0
 608 007c 142D     		cmp	r5, #20
 609 007e 09D9     		bls	.L53
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 610              		.loc 1 461 0 is_stmt 0 discriminator 1
 611 0080 46B1     		cbz	r6, .L53
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 612              		.loc 1 465 0 is_stmt 1
 613 0082 FF2D     		cmp	r5, #255
 614 0084 03D9     		bls	.L54
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 615              		.loc 1 467 0
 616 0086 FF22     		movs	r2, #255
 617 0088 094B     		ldr	r3, .L57+20
 618 008a 1A55     		strb	r2, [r3, r4]
 619 008c 70BD     		pop	{r4, r5, r6, pc}
 620              	.LVL63:
 621              	.L54:
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 622              		.loc 1 471 0
 623 008e 084B     		ldr	r3, .L57+20
 624 0090 1D55     		strb	r5, [r3, r4]
 625 0092 70BD     		pop	{r4, r5, r6, pc}
 626              	.LVL64:
 627              	.L53:
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 628              		.loc 1 480 0
 629 0094 0022     		movs	r2, #0
 630 0096 064B     		ldr	r3, .L57+20
 631 0098 1A55     		strb	r2, [r3, r4]
 632 009a 70BD     		pop	{r4, r5, r6, pc}
 633              	.LVL65:
 634              	.L58:
 635              		.align	2
 636              	.L57:
 637 009c 00000000 		.word	CapSense_1_rawFilterData1
 638 00a0 00000000 		.word	CapSense_1_sensorRaw
 639 00a4 00000000 		.word	CapSense_1_sensorBaseline
 640 00a8 00000000 		.word	CapSense_1_lowBaselineResetCnt
 641 00ac 00000000 		.word	CapSense_1_sensorBaselineLow
 642 00b0 00000000 		.word	CapSense_1_sensorSignal
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 47


 643              		.cfi_endproc
 644              	.LFE4:
 645              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 646              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 647              		.align	2
 648              		.global	CapSense_1_UpdateEnabledBaselines
 649              		.thumb
 650              		.thumb_func
 651              		.type	CapSense_1_UpdateEnabledBaselines, %function
 652              	CapSense_1_UpdateEnabledBaselines:
 653              	.LFB5:
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 654              		.loc 1 521 0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 10B5     		push	{r4, lr}
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 4, -8
 661              		.cfi_offset 14, -4
 662              	.LVL66:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 663              		.loc 1 526 0
 664 0002 0024     		movs	r4, #0
 665 0004 0DE0     		b	.L60
 666              	.LVL67:
 667              	.L62:
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 668              		.loc 1 528 0
 669 0006 E208     		lsrs	r2, r4, #3
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 670              		.loc 1 529 0
 671 0008 04F00701 		and	r1, r4, #7
 672 000c 0123     		movs	r3, #1
 673 000e 8B40     		lsls	r3, r3, r1
 674              	.LVL68:
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 675              		.loc 1 530 0
 676 0010 0549     		ldr	r1, .L64
 677 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 678 0014 1342     		tst	r3, r2
 679 0016 02D0     		beq	.L61
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 680              		.loc 1 532 0
 681 0018 2046     		mov	r0, r4
 682 001a FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 683              	.LVL69:
 684              	.L61:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 685              		.loc 1 526 0 discriminator 2
 686 001e 0134     		adds	r4, r4, #1
 687              	.LVL70:
 688 0020 E4B2     		uxtb	r4, r4
 689              	.LVL71:
 690              	.L60:
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 691              		.loc 1 526 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 48


 692 0022 002C     		cmp	r4, #0
 693 0024 EFD0     		beq	.L62
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 694              		.loc 1 535 0 is_stmt 1
 695 0026 10BD     		pop	{r4, pc}
 696              	.LVL72:
 697              	.L65:
 698              		.align	2
 699              	.L64:
 700 0028 00000000 		.word	CapSense_1_sensorEnableMask
 701              		.cfi_endproc
 702              	.LFE5:
 703              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 704              		.global	CapSense_1_numberOfSensors
 705              		.global	CapSense_1_rawDataIndex
 706              		.global	CapSense_1_debounceCounter
 707              		.global	CapSense_1_debounce
 708              		.global	CapSense_1_hysteresis
 709              		.global	CapSense_1_noiseThreshold
 710              		.global	CapSense_1_fingerThreshold
 711              		.comm	CapSense_1_lowBaselineResetCnt,1,4
 712              		.comm	CapSense_1_sensorOnMask,1,4
 713              		.comm	CapSense_1_sensorSignal,1,4
 714              		.comm	CapSense_1_sensorBaselineLow,1,4
 715              		.comm	CapSense_1_sensorBaseline,2,4
 716              		.comm	CapSense_1_rawFilterData1,2,4
 717              		.section	.rodata
 718              		.align	2
 719              		.type	CapSense_1_numberOfSensors, %object
 720              		.size	CapSense_1_numberOfSensors, 1
 721              	CapSense_1_numberOfSensors:
 722 0000 01       		.byte	1
 723 0001 000000   		.space	3
 724              		.type	CapSense_1_rawDataIndex, %object
 725              		.size	CapSense_1_rawDataIndex, 1
 726              	CapSense_1_rawDataIndex:
 727 0004 00       		.space	1
 728 0005 000000   		.space	3
 729              		.type	CapSense_1_debounce, %object
 730              		.size	CapSense_1_debounce, 1
 731              	CapSense_1_debounce:
 732 0008 05       		.byte	5
 733 0009 000000   		.space	3
 734              		.type	CapSense_1_hysteresis, %object
 735              		.size	CapSense_1_hysteresis, 1
 736              	CapSense_1_hysteresis:
 737 000c 0A       		.byte	10
 738 000d 000000   		.space	3
 739              		.type	CapSense_1_noiseThreshold, %object
 740              		.size	CapSense_1_noiseThreshold, 1
 741              	CapSense_1_noiseThreshold:
 742 0010 14       		.byte	20
 743 0011 000000   		.space	3
 744              		.type	CapSense_1_fingerThreshold, %object
 745              		.size	CapSense_1_fingerThreshold, 1
 746              	CapSense_1_fingerThreshold:
 747 0014 64       		.byte	100
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 49


 748 0015 000000   		.bss
 749              		.align	2
 750              		.set	.LANCHOR0,. + 0
 751              		.type	CapSense_1_debounceCounter, %object
 752              		.size	CapSense_1_debounceCounter, 2
 753              	CapSense_1_debounceCounter:
 754 0000 0000     		.space	2
 755 0002 0000     		.text
 756              	.Letext0:
 757              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 758              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_1.h"
 759              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 760              		.section	.debug_info,"",%progbits
 761              	.Ldebug_info0:
 762 0000 56060000 		.4byte	0x656
 763 0004 0400     		.2byte	0x4
 764 0006 00000000 		.4byte	.Ldebug_abbrev0
 765 000a 04       		.byte	0x4
 766 000b 01       		.uleb128 0x1
 767 000c CB040000 		.4byte	.LASF59
 768 0010 01       		.byte	0x1
 769 0011 56010000 		.4byte	.LASF60
 770 0015 42020000 		.4byte	.LASF61
 771 0019 00000000 		.4byte	.Ldebug_ranges0+0
 772 001d 00000000 		.4byte	0
 773 0021 00000000 		.4byte	.Ldebug_line0
 774 0025 02       		.uleb128 0x2
 775 0026 01       		.byte	0x1
 776 0027 06       		.byte	0x6
 777 0028 FC000000 		.4byte	.LASF0
 778 002c 02       		.uleb128 0x2
 779 002d 01       		.byte	0x1
 780 002e 08       		.byte	0x8
 781 002f DB030000 		.4byte	.LASF1
 782 0033 02       		.uleb128 0x2
 783 0034 02       		.byte	0x2
 784 0035 05       		.byte	0x5
 785 0036 1E040000 		.4byte	.LASF2
 786 003a 02       		.uleb128 0x2
 787 003b 02       		.byte	0x2
 788 003c 07       		.byte	0x7
 789 003d 2F020000 		.4byte	.LASF3
 790 0041 02       		.uleb128 0x2
 791 0042 04       		.byte	0x4
 792 0043 05       		.byte	0x5
 793 0044 27010000 		.4byte	.LASF4
 794 0048 02       		.uleb128 0x2
 795 0049 04       		.byte	0x4
 796 004a 07       		.byte	0x7
 797 004b 1D020000 		.4byte	.LASF5
 798 004f 02       		.uleb128 0x2
 799 0050 08       		.byte	0x8
 800 0051 05       		.byte	0x5
 801 0052 EE000000 		.4byte	.LASF6
 802 0056 02       		.uleb128 0x2
 803 0057 08       		.byte	0x8
 804 0058 07       		.byte	0x7
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 50


 805 0059 5D000000 		.4byte	.LASF7
 806 005d 03       		.uleb128 0x3
 807 005e 04       		.byte	0x4
 808 005f 05       		.byte	0x5
 809 0060 696E7400 		.ascii	"int\000"
 810 0064 02       		.uleb128 0x2
 811 0065 04       		.byte	0x4
 812 0066 07       		.byte	0x7
 813 0067 F2010000 		.4byte	.LASF8
 814 006b 04       		.uleb128 0x4
 815 006c 49010000 		.4byte	.LASF9
 816 0070 02       		.byte	0x2
 817 0071 3801     		.2byte	0x138
 818 0073 2C000000 		.4byte	0x2c
 819 0077 04       		.uleb128 0x4
 820 0078 00000000 		.4byte	.LASF10
 821 007c 02       		.byte	0x2
 822 007d 3901     		.2byte	0x139
 823 007f 3A000000 		.4byte	0x3a
 824 0083 04       		.uleb128 0x4
 825 0084 81010000 		.4byte	.LASF11
 826 0088 02       		.byte	0x2
 827 0089 3A01     		.2byte	0x13a
 828 008b 48000000 		.4byte	0x48
 829 008f 02       		.uleb128 0x2
 830 0090 04       		.byte	0x4
 831 0091 04       		.byte	0x4
 832 0092 62030000 		.4byte	.LASF12
 833 0096 02       		.uleb128 0x2
 834 0097 08       		.byte	0x8
 835 0098 04       		.byte	0x4
 836 0099 4F010000 		.4byte	.LASF13
 837 009d 02       		.uleb128 0x2
 838 009e 01       		.byte	0x1
 839 009f 08       		.byte	0x8
 840 00a0 89040000 		.4byte	.LASF14
 841 00a4 02       		.uleb128 0x2
 842 00a5 04       		.byte	0x4
 843 00a6 07       		.byte	0x7
 844 00a7 DC020000 		.4byte	.LASF15
 845 00ab 05       		.uleb128 0x5
 846 00ac 49000000 		.4byte	.LASF16
 847 00b0 01       		.byte	0x1
 848 00b1 79       		.byte	0x79
 849 00b2 00000000 		.4byte	.LFB0
 850 00b6 4C000000 		.4byte	.LFE0-.LFB0
 851 00ba 01       		.uleb128 0x1
 852 00bb 9C       		.byte	0x9c
 853 00bc DB000000 		.4byte	0xdb
 854 00c0 06       		.uleb128 0x6
 855 00c1 89020000 		.4byte	.LASF18
 856 00c5 01       		.byte	0x1
 857 00c6 79       		.byte	0x79
 858 00c7 6B000000 		.4byte	0x6b
 859 00cb 01       		.uleb128 0x1
 860 00cc 50       		.byte	0x50
 861 00cd 07       		.uleb128 0x7
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 51


 862 00ce 28040000 		.4byte	.LASF20
 863 00d2 01       		.byte	0x1
 864 00d3 7D       		.byte	0x7d
 865 00d4 6B000000 		.4byte	0x6b
 866 00d8 01       		.uleb128 0x1
 867 00d9 51       		.byte	0x51
 868 00da 00       		.byte	0
 869 00db 05       		.uleb128 0x5
 870 00dc 1C030000 		.4byte	.LASF17
 871 00e0 01       		.byte	0x1
 872 00e1 C2       		.byte	0xc2
 873 00e2 00000000 		.4byte	.LFB1
 874 00e6 18000000 		.4byte	.LFE1-.LFB1
 875 00ea 01       		.uleb128 0x1
 876 00eb 9C       		.byte	0x9c
 877 00ec 2D010000 		.4byte	0x12d
 878 00f0 08       		.uleb128 0x8
 879 00f1 89020000 		.4byte	.LASF18
 880 00f5 01       		.byte	0x1
 881 00f6 C2       		.byte	0xc2
 882 00f7 6B000000 		.4byte	0x6b
 883 00fb 00000000 		.4byte	.LLST0
 884 00ff 09       		.uleb128 0x9
 885 0100 08000000 		.4byte	.LVL3
 886 0104 36060000 		.4byte	0x636
 887 0108 13010000 		.4byte	0x113
 888 010c 0A       		.uleb128 0xa
 889 010d 01       		.uleb128 0x1
 890 010e 50       		.byte	0x50
 891 010f 02       		.uleb128 0x2
 892 0110 74       		.byte	0x74
 893 0111 00       		.sleb128 0
 894 0112 00       		.byte	0
 895 0113 0B       		.uleb128 0xb
 896 0114 0C000000 		.4byte	.LVL4
 897 0118 47060000 		.4byte	0x647
 898 011c 0C       		.uleb128 0xc
 899 011d 16000000 		.4byte	.LVL5
 900 0121 AB000000 		.4byte	0xab
 901 0125 0A       		.uleb128 0xa
 902 0126 01       		.uleb128 0x1
 903 0127 50       		.byte	0x50
 904 0128 02       		.uleb128 0x2
 905 0129 74       		.byte	0x74
 906 012a 00       		.sleb128 0
 907 012b 00       		.byte	0
 908 012c 00       		.byte	0
 909 012d 05       		.uleb128 0x5
 910 012e 27000000 		.4byte	.LASF19
 911 0132 01       		.byte	0x1
 912 0133 F6       		.byte	0xf6
 913 0134 00000000 		.4byte	.LFB2
 914 0138 16000000 		.4byte	.LFE2-.LFB2
 915 013c 01       		.uleb128 0x1
 916 013d 9C       		.byte	0x9c
 917 013e 60010000 		.4byte	0x160
 918 0142 0D       		.uleb128 0xd
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 52


 919 0143 6900     		.ascii	"i\000"
 920 0145 01       		.byte	0x1
 921 0146 F9       		.byte	0xf9
 922 0147 6B000000 		.4byte	0x6b
 923 014b 21000000 		.4byte	.LLST1
 924 014f 0C       		.uleb128 0xc
 925 0150 0C000000 		.4byte	.LVL8
 926 0154 DB000000 		.4byte	0xdb
 927 0158 0A       		.uleb128 0xa
 928 0159 01       		.uleb128 0x1
 929 015a 50       		.byte	0x50
 930 015b 02       		.uleb128 0x2
 931 015c 74       		.byte	0x74
 932 015d 00       		.sleb128 0
 933 015e 00       		.byte	0
 934 015f 00       		.byte	0
 935 0160 0E       		.uleb128 0xe
 936 0161 E9030000 		.4byte	.LASF21
 937 0165 01       		.byte	0x1
 938 0166 1701     		.2byte	0x117
 939 0168 00000000 		.4byte	.LFB3
 940 016c 44000000 		.4byte	.LFE3-.LFB3
 941 0170 01       		.uleb128 0x1
 942 0171 9C       		.byte	0x9c
 943 0172 C5010000 		.4byte	0x1c5
 944 0176 0F       		.uleb128 0xf
 945 0177 6900     		.ascii	"i\000"
 946 0179 01       		.byte	0x1
 947 017a 1A01     		.2byte	0x11a
 948 017c 6B000000 		.4byte	0x6b
 949 0180 4B000000 		.4byte	.LLST2
 950 0184 10       		.uleb128 0x10
 951 0185 706F7300 		.ascii	"pos\000"
 952 0189 01       		.byte	0x1
 953 018a 1B01     		.2byte	0x11b
 954 018c 6B000000 		.4byte	0x6b
 955 0190 01       		.uleb128 0x1
 956 0191 52       		.byte	0x52
 957 0192 11       		.uleb128 0x11
 958 0193 D5020000 		.4byte	.LASF22
 959 0197 01       		.byte	0x1
 960 0198 1C01     		.2byte	0x11c
 961 019a 6B000000 		.4byte	0x6b
 962 019e 69000000 		.4byte	.LLST3
 963 01a2 0B       		.uleb128 0xb
 964 01a3 06000000 		.4byte	.LVL11
 965 01a7 52060000 		.4byte	0x652
 966 01ab 0B       		.uleb128 0xb
 967 01ac 0A000000 		.4byte	.LVL12
 968 01b0 47060000 		.4byte	0x647
 969 01b4 0C       		.uleb128 0xc
 970 01b5 32000000 		.4byte	.LVL16
 971 01b9 AB000000 		.4byte	0xab
 972 01bd 0A       		.uleb128 0xa
 973 01be 01       		.uleb128 0x1
 974 01bf 50       		.byte	0x50
 975 01c0 02       		.uleb128 0x2
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 53


 976 01c1 74       		.byte	0x74
 977 01c2 00       		.sleb128 0
 978 01c3 00       		.byte	0
 979 01c4 00       		.byte	0
 980 01c5 12       		.uleb128 0x12
 981 01c6 9A030000 		.4byte	.LASF28
 982 01ca 01       		.byte	0x1
 983 01cb 4102     		.2byte	0x241
 984 01cd 6B000000 		.4byte	0x6b
 985 01d1 00000000 		.4byte	.LFB6
 986 01d5 74000000 		.4byte	.LFE6-.LFB6
 987 01d9 01       		.uleb128 0x1
 988 01da 9C       		.byte	0x9c
 989 01db 53020000 		.4byte	0x253
 990 01df 13       		.uleb128 0x13
 991 01e0 89020000 		.4byte	.LASF18
 992 01e4 01       		.byte	0x1
 993 01e5 4102     		.2byte	0x241
 994 01e7 6B000000 		.4byte	0x6b
 995 01eb 9E000000 		.4byte	.LLST4
 996 01ef 11       		.uleb128 0x11
 997 01f0 BD040000 		.4byte	.LASF23
 998 01f4 01       		.byte	0x1
 999 01f5 4402     		.2byte	0x244
 1000 01f7 6B000000 		.4byte	0x6b
 1001 01fb D8000000 		.4byte	.LLST5
 1002 01ff 10       		.uleb128 0x10
 1003 0200 706F7300 		.ascii	"pos\000"
 1004 0204 01       		.byte	0x1
 1005 0205 4602     		.2byte	0x246
 1006 0207 6B000000 		.4byte	0x6b
 1007 020b 01       		.uleb128 0x1
 1008 020c 52       		.byte	0x52
 1009 020d 14       		.uleb128 0x14
 1010 020e 2F040000 		.4byte	.LASF24
 1011 0212 01       		.byte	0x1
 1012 0213 4702     		.2byte	0x247
 1013 0215 6B000000 		.4byte	0x6b
 1014 0219 01       		.uleb128 0x1
 1015 021a 53       		.byte	0x53
 1016 021b 11       		.uleb128 0x11
 1017 021c 28040000 		.4byte	.LASF20
 1018 0220 01       		.byte	0x1
 1019 0221 4902     		.2byte	0x249
 1020 0223 6B000000 		.4byte	0x6b
 1021 0227 D8000000 		.4byte	.LLST5
 1022 022b 15       		.uleb128 0x15
 1023 022c 17000000 		.4byte	.LASF25
 1024 0230 01       		.byte	0x1
 1025 0231 4A02     		.2byte	0x24a
 1026 0233 6B000000 		.4byte	0x6b
 1027 0237 64       		.byte	0x64
 1028 0238 15       		.uleb128 0x15
 1029 0239 88010000 		.4byte	.LASF26
 1030 023d 01       		.byte	0x1
 1031 023e 4B02     		.2byte	0x24b
 1032 0240 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 54


 1033 0244 0A       		.byte	0xa
 1034 0245 15       		.uleb128 0x15
 1035 0246 CC020000 		.4byte	.LASF27
 1036 024a 01       		.byte	0x1
 1037 024b 4C02     		.2byte	0x24c
 1038 024d 6B000000 		.4byte	0x6b
 1039 0251 05       		.byte	0x5
 1040 0252 00       		.byte	0
 1041 0253 12       		.uleb128 0x12
 1042 0254 8C000000 		.4byte	.LASF29
 1043 0258 01       		.byte	0x1
 1044 0259 8902     		.2byte	0x289
 1045 025b 6B000000 		.4byte	0x6b
 1046 025f 00000000 		.4byte	.LFB7
 1047 0263 0E000000 		.4byte	.LFE7-.LFB7
 1048 0267 01       		.uleb128 0x1
 1049 0268 9C       		.byte	0x9c
 1050 0269 BA020000 		.4byte	0x2ba
 1051 026d 13       		.uleb128 0x13
 1052 026e 28040000 		.4byte	.LASF20
 1053 0272 01       		.byte	0x1
 1054 0273 8902     		.2byte	0x289
 1055 0275 6B000000 		.4byte	0x6b
 1056 0279 EB000000 		.4byte	.LLST7
 1057 027d 11       		.uleb128 0x11
 1058 027e 08010000 		.4byte	.LASF30
 1059 0282 01       		.byte	0x1
 1060 0283 8C02     		.2byte	0x28c
 1061 0285 6B000000 		.4byte	0x6b
 1062 0289 0C010000 		.4byte	.LLST8
 1063 028d 15       		.uleb128 0x15
 1064 028e 11010000 		.4byte	.LASF31
 1065 0292 01       		.byte	0x1
 1066 0293 8D02     		.2byte	0x28d
 1067 0295 6B000000 		.4byte	0x6b
 1068 0299 01       		.byte	0x1
 1069 029a 11       		.uleb128 0x11
 1070 029b 21010000 		.4byte	.LASF32
 1071 029f 01       		.byte	0x1
 1072 02a0 8E02     		.2byte	0x28e
 1073 02a2 6B000000 		.4byte	0x6b
 1074 02a6 2C010000 		.4byte	.LLST9
 1075 02aa 0C       		.uleb128 0xc
 1076 02ab 08000000 		.4byte	.LVL31
 1077 02af C5010000 		.4byte	0x1c5
 1078 02b3 0A       		.uleb128 0xa
 1079 02b4 01       		.uleb128 0x1
 1080 02b5 50       		.byte	0x50
 1081 02b6 01       		.uleb128 0x1
 1082 02b7 30       		.byte	0x30
 1083 02b8 00       		.byte	0
 1084 02b9 00       		.byte	0
 1085 02ba 12       		.uleb128 0x12
 1086 02bb B9030000 		.4byte	.LASF33
 1087 02bf 01       		.byte	0x1
 1088 02c0 B502     		.2byte	0x2b5
 1089 02c2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 55


 1090 02c6 00000000 		.4byte	.LFB8
 1091 02ca 1E000000 		.4byte	.LFE8-.LFB8
 1092 02ce 01       		.uleb128 0x1
 1093 02cf 9C       		.byte	0x9c
 1094 02d0 03030000 		.4byte	0x303
 1095 02d4 0F       		.uleb128 0xf
 1096 02d5 6900     		.ascii	"i\000"
 1097 02d7 01       		.byte	0x1
 1098 02d8 B802     		.2byte	0x2b8
 1099 02da 6B000000 		.4byte	0x6b
 1100 02de 4B010000 		.4byte	.LLST10
 1101 02e2 11       		.uleb128 0x11
 1102 02e3 21010000 		.4byte	.LASF32
 1103 02e7 01       		.byte	0x1
 1104 02e8 B902     		.2byte	0x2b9
 1105 02ea 6B000000 		.4byte	0x6b
 1106 02ee 75010000 		.4byte	.LLST11
 1107 02f2 0C       		.uleb128 0xc
 1108 02f3 0E000000 		.4byte	.LVL35
 1109 02f7 53020000 		.4byte	0x253
 1110 02fb 0A       		.uleb128 0xa
 1111 02fc 01       		.uleb128 0x1
 1112 02fd 50       		.byte	0x50
 1113 02fe 02       		.uleb128 0x2
 1114 02ff 74       		.byte	0x74
 1115 0300 00       		.sleb128 0
 1116 0301 00       		.byte	0
 1117 0302 00       		.byte	0
 1118 0303 0E       		.uleb128 0xe
 1119 0304 74000000 		.4byte	.LASF34
 1120 0308 01       		.byte	0x1
 1121 0309 E302     		.2byte	0x2e3
 1122 030b 00000000 		.4byte	.LFB9
 1123 030f 10000000 		.4byte	.LFE9-.LFB9
 1124 0313 01       		.uleb128 0x1
 1125 0314 9C       		.byte	0x9c
 1126 0315 5F030000 		.4byte	0x35f
 1127 0319 16       		.uleb128 0x16
 1128 031a 28040000 		.4byte	.LASF20
 1129 031e 01       		.byte	0x1
 1130 031f E302     		.2byte	0x2e3
 1131 0321 6B000000 		.4byte	0x6b
 1132 0325 01       		.uleb128 0x1
 1133 0326 50       		.byte	0x50
 1134 0327 17       		.uleb128 0x17
 1135 0328 706F7300 		.ascii	"pos\000"
 1136 032c 01       		.byte	0x1
 1137 032d E602     		.2byte	0x2e6
 1138 032f 6B000000 		.4byte	0x6b
 1139 0333 00       		.byte	0
 1140 0334 15       		.uleb128 0x15
 1141 0335 D5020000 		.4byte	.LASF22
 1142 0339 01       		.byte	0x1
 1143 033a E702     		.2byte	0x2e7
 1144 033c 6B000000 		.4byte	0x6b
 1145 0340 01       		.byte	0x1
 1146 0341 11       		.uleb128 0x11
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 56


 1147 0342 08010000 		.4byte	.LASF30
 1148 0346 01       		.byte	0x1
 1149 0347 E802     		.2byte	0x2e8
 1150 0349 6B000000 		.4byte	0x6b
 1151 034d 94010000 		.4byte	.LLST12
 1152 0351 15       		.uleb128 0x15
 1153 0352 11010000 		.4byte	.LASF31
 1154 0356 01       		.byte	0x1
 1155 0357 E902     		.2byte	0x2e9
 1156 0359 6B000000 		.4byte	0x6b
 1157 035d 01       		.byte	0x1
 1158 035e 00       		.byte	0
 1159 035f 0E       		.uleb128 0xe
 1160 0360 30010000 		.4byte	.LASF35
 1161 0364 01       		.byte	0x1
 1162 0365 1503     		.2byte	0x315
 1163 0367 00000000 		.4byte	.LFB10
 1164 036b 10000000 		.4byte	.LFE10-.LFB10
 1165 036f 01       		.uleb128 0x1
 1166 0370 9C       		.byte	0x9c
 1167 0371 BB030000 		.4byte	0x3bb
 1168 0375 16       		.uleb128 0x16
 1169 0376 28040000 		.4byte	.LASF20
 1170 037a 01       		.byte	0x1
 1171 037b 1503     		.2byte	0x315
 1172 037d 6B000000 		.4byte	0x6b
 1173 0381 01       		.uleb128 0x1
 1174 0382 50       		.byte	0x50
 1175 0383 17       		.uleb128 0x17
 1176 0384 706F7300 		.ascii	"pos\000"
 1177 0388 01       		.byte	0x1
 1178 0389 1803     		.2byte	0x318
 1179 038b 6B000000 		.4byte	0x6b
 1180 038f 00       		.byte	0
 1181 0390 15       		.uleb128 0x15
 1182 0391 D5020000 		.4byte	.LASF22
 1183 0395 01       		.byte	0x1
 1184 0396 1903     		.2byte	0x319
 1185 0398 6B000000 		.4byte	0x6b
 1186 039c 01       		.byte	0x1
 1187 039d 11       		.uleb128 0x11
 1188 039e 08010000 		.4byte	.LASF30
 1189 03a2 01       		.byte	0x1
 1190 03a3 1A03     		.2byte	0x31a
 1191 03a5 6B000000 		.4byte	0x6b
 1192 03a9 B4010000 		.4byte	.LLST13
 1193 03ad 15       		.uleb128 0x15
 1194 03ae 11010000 		.4byte	.LASF31
 1195 03b2 01       		.byte	0x1
 1196 03b3 1B03     		.2byte	0x31b
 1197 03b5 6B000000 		.4byte	0x6b
 1198 03b9 01       		.byte	0x1
 1199 03ba 00       		.byte	0
 1200 03bb 12       		.uleb128 0x12
 1201 03bc 73050000 		.4byte	.LASF36
 1202 03c0 01       		.byte	0x1
 1203 03c1 8E07     		.2byte	0x78e
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 57


 1204 03c3 77000000 		.4byte	0x77
 1205 03c7 00000000 		.4byte	.LFB11
 1206 03cb 0C000000 		.4byte	.LFE11-.LFB11
 1207 03cf 01       		.uleb128 0x1
 1208 03d0 9C       		.byte	0x9c
 1209 03d1 02040000 		.4byte	0x402
 1210 03d5 18       		.uleb128 0x18
 1211 03d6 783100   		.ascii	"x1\000"
 1212 03d9 01       		.byte	0x1
 1213 03da 8E07     		.2byte	0x78e
 1214 03dc 77000000 		.4byte	0x77
 1215 03e0 D4010000 		.4byte	.LLST14
 1216 03e4 19       		.uleb128 0x19
 1217 03e5 783200   		.ascii	"x2\000"
 1218 03e8 01       		.byte	0x1
 1219 03e9 8E07     		.2byte	0x78e
 1220 03eb 77000000 		.4byte	0x77
 1221 03ef 01       		.uleb128 0x1
 1222 03f0 51       		.byte	0x51
 1223 03f1 0F       		.uleb128 0xf
 1224 03f2 746D7000 		.ascii	"tmp\000"
 1225 03f6 01       		.byte	0x1
 1226 03f7 9107     		.2byte	0x791
 1227 03f9 83000000 		.4byte	0x83
 1228 03fd F5010000 		.4byte	.LLST15
 1229 0401 00       		.byte	0
 1230 0402 0E       		.uleb128 0xe
 1231 0403 36040000 		.4byte	.LASF37
 1232 0407 01       		.byte	0x1
 1233 0408 5A01     		.2byte	0x15a
 1234 040a 00000000 		.4byte	.LFB4
 1235 040e B4000000 		.4byte	.LFE4-.LFB4
 1236 0412 01       		.uleb128 0x1
 1237 0413 9C       		.byte	0x9c
 1238 0414 8F040000 		.4byte	0x48f
 1239 0418 13       		.uleb128 0x13
 1240 0419 89020000 		.4byte	.LASF18
 1241 041d 01       		.byte	0x1
 1242 041e 5A01     		.2byte	0x15a
 1243 0420 6B000000 		.4byte	0x6b
 1244 0424 0C020000 		.4byte	.LLST16
 1245 0428 11       		.uleb128 0x11
 1246 0429 AB020000 		.4byte	.LASF38
 1247 042d 01       		.byte	0x1
 1248 042e 5D01     		.2byte	0x15d
 1249 0430 83000000 		.4byte	0x83
 1250 0434 2D020000 		.4byte	.LLST17
 1251 0438 11       		.uleb128 0x11
 1252 0439 89050000 		.4byte	.LASF39
 1253 043d 01       		.byte	0x1
 1254 043e 5E01     		.2byte	0x15e
 1255 0440 77000000 		.4byte	0x77
 1256 0444 5A020000 		.4byte	.LLST18
 1257 0448 11       		.uleb128 0x11
 1258 0449 07000000 		.4byte	.LASF40
 1259 044d 01       		.byte	0x1
 1260 044e 5F01     		.2byte	0x15f
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 58


 1261 0450 77000000 		.4byte	0x77
 1262 0454 78020000 		.4byte	.LLST19
 1263 0458 11       		.uleb128 0x11
 1264 0459 28040000 		.4byte	.LASF20
 1265 045d 01       		.byte	0x1
 1266 045e 6001     		.2byte	0x160
 1267 0460 6B000000 		.4byte	0x6b
 1268 0464 BE020000 		.4byte	.LLST20
 1269 0468 15       		.uleb128 0x15
 1270 0469 0F040000 		.4byte	.LASF41
 1271 046d 01       		.byte	0x1
 1272 046e 6101     		.2byte	0x161
 1273 0470 6B000000 		.4byte	0x6b
 1274 0474 14       		.byte	0x14
 1275 0475 0B       		.uleb128 0xb
 1276 0476 14000000 		.4byte	.LVL50
 1277 047a BB030000 		.4byte	0x3bb
 1278 047e 0C       		.uleb128 0xc
 1279 047f 44000000 		.4byte	.LVL56
 1280 0483 AB000000 		.4byte	0xab
 1281 0487 0A       		.uleb128 0xa
 1282 0488 01       		.uleb128 0x1
 1283 0489 50       		.byte	0x50
 1284 048a 02       		.uleb128 0x2
 1285 048b 74       		.byte	0x74
 1286 048c 00       		.sleb128 0
 1287 048d 00       		.byte	0
 1288 048e 00       		.byte	0
 1289 048f 0E       		.uleb128 0xe
 1290 0490 40030000 		.4byte	.LASF42
 1291 0494 01       		.byte	0x1
 1292 0495 0702     		.2byte	0x207
 1293 0497 00000000 		.4byte	.LFB5
 1294 049b 2C000000 		.4byte	.LFE5-.LFB5
 1295 049f 01       		.uleb128 0x1
 1296 04a0 9C       		.byte	0x9c
 1297 04a1 E2040000 		.4byte	0x4e2
 1298 04a5 0F       		.uleb128 0xf
 1299 04a6 6900     		.ascii	"i\000"
 1300 04a8 01       		.byte	0x1
 1301 04a9 0A02     		.2byte	0x20a
 1302 04ab 6B000000 		.4byte	0x6b
 1303 04af E9020000 		.4byte	.LLST21
 1304 04b3 10       		.uleb128 0x10
 1305 04b4 706F7300 		.ascii	"pos\000"
 1306 04b8 01       		.byte	0x1
 1307 04b9 0B02     		.2byte	0x20b
 1308 04bb 6B000000 		.4byte	0x6b
 1309 04bf 01       		.uleb128 0x1
 1310 04c0 52       		.byte	0x52
 1311 04c1 11       		.uleb128 0x11
 1312 04c2 D5020000 		.4byte	.LASF22
 1313 04c6 01       		.byte	0x1
 1314 04c7 0C02     		.2byte	0x20c
 1315 04c9 6B000000 		.4byte	0x6b
 1316 04cd 13030000 		.4byte	.LLST22
 1317 04d1 0C       		.uleb128 0xc
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 59


 1318 04d2 1E000000 		.4byte	.LVL69
 1319 04d6 02040000 		.4byte	0x402
 1320 04da 0A       		.uleb128 0xa
 1321 04db 01       		.uleb128 0x1
 1322 04dc 50       		.byte	0x50
 1323 04dd 02       		.uleb128 0x2
 1324 04de 74       		.byte	0x74
 1325 04df 00       		.sleb128 0
 1326 04e0 00       		.byte	0
 1327 04e1 00       		.byte	0
 1328 04e2 1A       		.uleb128 0x1a
 1329 04e3 77000000 		.4byte	0x77
 1330 04e7 F2040000 		.4byte	0x4f2
 1331 04eb 1B       		.uleb128 0x1b
 1332 04ec A4000000 		.4byte	0xa4
 1333 04f0 00       		.byte	0
 1334 04f1 00       		.byte	0
 1335 04f2 1C       		.uleb128 0x1c
 1336 04f3 D9000000 		.4byte	.LASF43
 1337 04f7 03       		.byte	0x3
 1338 04f8 B902     		.2byte	0x2b9
 1339 04fa E2040000 		.4byte	0x4e2
 1340 04fe 1D       		.uleb128 0x1d
 1341 04ff 80030000 		.4byte	.LASF44
 1342 0503 01       		.byte	0x1
 1343 0504 21       		.byte	0x21
 1344 0505 E2040000 		.4byte	0x4e2
 1345 0509 05       		.uleb128 0x5
 1346 050a 03       		.byte	0x3
 1347 050b 00000000 		.4byte	CapSense_1_rawFilterData1
 1348 050f 1A       		.uleb128 0x1a
 1349 0510 6B000000 		.4byte	0x6b
 1350 0514 1F050000 		.4byte	0x51f
 1351 0518 1B       		.uleb128 0x1b
 1352 0519 A4000000 		.4byte	0xa4
 1353 051d 00       		.byte	0
 1354 051e 00       		.byte	0
 1355 051f 1C       		.uleb128 0x1c
 1356 0520 B0020000 		.4byte	.LASF45
 1357 0524 04       		.byte	0x4
 1358 0525 0301     		.2byte	0x103
 1359 0527 0F050000 		.4byte	0x50f
 1360 052b 1C       		.uleb128 0x1c
 1361 052c 04030000 		.4byte	.LASF46
 1362 0530 04       		.byte	0x4
 1363 0531 0401     		.2byte	0x104
 1364 0533 37050000 		.4byte	0x537
 1365 0537 1E       		.uleb128 0x1e
 1366 0538 0F050000 		.4byte	0x50f
 1367 053c 1D       		.uleb128 0x1d
 1368 053d 59050000 		.4byte	.LASF47
 1369 0541 01       		.byte	0x1
 1370 0542 29       		.byte	0x29
 1371 0543 E2040000 		.4byte	0x4e2
 1372 0547 05       		.uleb128 0x5
 1373 0548 03       		.byte	0x3
 1374 0549 00000000 		.4byte	CapSense_1_sensorBaseline
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 60


 1375 054d 1D       		.uleb128 0x1d
 1376 054e A0040000 		.4byte	.LASF48
 1377 0552 01       		.byte	0x1
 1378 0553 2A       		.byte	0x2a
 1379 0554 0F050000 		.4byte	0x50f
 1380 0558 05       		.uleb128 0x5
 1381 0559 03       		.byte	0x3
 1382 055a 00000000 		.4byte	CapSense_1_sensorBaselineLow
 1383 055e 1D       		.uleb128 0x1d
 1384 055f 56040000 		.4byte	.LASF49
 1385 0563 01       		.byte	0x1
 1386 0564 2B       		.byte	0x2b
 1387 0565 0F050000 		.4byte	0x50f
 1388 0569 05       		.uleb128 0x5
 1389 056a 03       		.byte	0x3
 1390 056b 00000000 		.4byte	CapSense_1_sensorSignal
 1391 056f 1D       		.uleb128 0x1d
 1392 0570 68030000 		.4byte	.LASF50
 1393 0574 01       		.byte	0x1
 1394 0575 2C       		.byte	0x2c
 1395 0576 0F050000 		.4byte	0x50f
 1396 057a 05       		.uleb128 0x5
 1397 057b 03       		.byte	0x3
 1398 057c 00000000 		.4byte	CapSense_1_sensorOnMask
 1399 0580 1D       		.uleb128 0x1d
 1400 0581 E5020000 		.4byte	.LASF51
 1401 0585 01       		.byte	0x1
 1402 0586 2E       		.byte	0x2e
 1403 0587 0F050000 		.4byte	0x50f
 1404 058b 05       		.uleb128 0x5
 1405 058c 03       		.byte	0x3
 1406 058d 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 1407 0591 1D       		.uleb128 0x1d
 1408 0592 D7010000 		.4byte	.LASF52
 1409 0596 01       		.byte	0x1
 1410 0597 30       		.byte	0x30
 1411 0598 A2050000 		.4byte	0x5a2
 1412 059c 05       		.uleb128 0x5
 1413 059d 03       		.byte	0x3
 1414 059e 00000000 		.4byte	CapSense_1_fingerThreshold
 1415 05a2 1E       		.uleb128 0x1e
 1416 05a3 0F050000 		.4byte	0x50f
 1417 05a7 1D       		.uleb128 0x1d
 1418 05a8 AB000000 		.4byte	.LASF53
 1419 05ac 01       		.byte	0x1
 1420 05ad 34       		.byte	0x34
 1421 05ae B8050000 		.4byte	0x5b8
 1422 05b2 05       		.uleb128 0x5
 1423 05b3 03       		.byte	0x3
 1424 05b4 00000000 		.4byte	CapSense_1_noiseThreshold
 1425 05b8 1E       		.uleb128 0x1e
 1426 05b9 0F050000 		.4byte	0x50f
 1427 05bd 1D       		.uleb128 0x1d
 1428 05be A9010000 		.4byte	.LASF54
 1429 05c2 01       		.byte	0x1
 1430 05c3 38       		.byte	0x38
 1431 05c4 CE050000 		.4byte	0x5ce
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 61


 1432 05c8 05       		.uleb128 0x5
 1433 05c9 03       		.byte	0x3
 1434 05ca 00000000 		.4byte	CapSense_1_hysteresis
 1435 05ce 1E       		.uleb128 0x1e
 1436 05cf 0F050000 		.4byte	0x50f
 1437 05d3 1D       		.uleb128 0x1d
 1438 05d4 C5000000 		.4byte	.LASF55
 1439 05d8 01       		.byte	0x1
 1440 05d9 3C       		.byte	0x3c
 1441 05da E4050000 		.4byte	0x5e4
 1442 05de 05       		.uleb128 0x5
 1443 05df 03       		.byte	0x3
 1444 05e0 00000000 		.4byte	CapSense_1_debounce
 1445 05e4 1E       		.uleb128 0x1e
 1446 05e5 0F050000 		.4byte	0x50f
 1447 05e9 1A       		.uleb128 0x1a
 1448 05ea 6B000000 		.4byte	0x6b
 1449 05ee F9050000 		.4byte	0x5f9
 1450 05f2 1B       		.uleb128 0x1b
 1451 05f3 A4000000 		.4byte	0xa4
 1452 05f7 01       		.byte	0x1
 1453 05f8 00       		.byte	0
 1454 05f9 1D       		.uleb128 0x1d
 1455 05fa 6E040000 		.4byte	.LASF56
 1456 05fe 01       		.byte	0x1
 1457 05ff 40       		.byte	0x40
 1458 0600 E9050000 		.4byte	0x5e9
 1459 0604 05       		.uleb128 0x5
 1460 0605 03       		.byte	0x3
 1461 0606 00000000 		.4byte	CapSense_1_debounceCounter
 1462 060a 1D       		.uleb128 0x1d
 1463 060b BF010000 		.4byte	.LASF57
 1464 060f 01       		.byte	0x1
 1465 0610 44       		.byte	0x44
 1466 0611 1B060000 		.4byte	0x61b
 1467 0615 05       		.uleb128 0x5
 1468 0616 03       		.byte	0x3
 1469 0617 00000000 		.4byte	CapSense_1_rawDataIndex
 1470 061b 1E       		.uleb128 0x1e
 1471 061c 0F050000 		.4byte	0x50f
 1472 0620 1D       		.uleb128 0x1d
 1473 0621 90020000 		.4byte	.LASF58
 1474 0625 01       		.byte	0x1
 1475 0626 49       		.byte	0x49
 1476 0627 31060000 		.4byte	0x631
 1477 062b 05       		.uleb128 0x5
 1478 062c 03       		.byte	0x3
 1479 062d 00000000 		.4byte	CapSense_1_numberOfSensors
 1480 0631 1E       		.uleb128 0x1e
 1481 0632 0F050000 		.4byte	0x50f
 1482 0636 1F       		.uleb128 0x1f
 1483 0637 93010000 		.4byte	.LASF62
 1484 063b 03       		.byte	0x3
 1485 063c 9A       		.byte	0x9a
 1486 063d 47060000 		.4byte	0x647
 1487 0641 20       		.uleb128 0x20
 1488 0642 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 62


 1489 0646 00       		.byte	0
 1490 0647 21       		.uleb128 0x21
 1491 0648 8E040000 		.4byte	.LASF63
 1492 064c 03       		.byte	0x3
 1493 064d 99       		.byte	0x99
 1494 064e 6B000000 		.4byte	0x6b
 1495 0652 22       		.uleb128 0x22
 1496 0653 FF010000 		.4byte	.LASF64
 1497 0657 03       		.byte	0x3
 1498 0658 9B       		.byte	0x9b
 1499 0659 00       		.byte	0
 1500              		.section	.debug_abbrev,"",%progbits
 1501              	.Ldebug_abbrev0:
 1502 0000 01       		.uleb128 0x1
 1503 0001 11       		.uleb128 0x11
 1504 0002 01       		.byte	0x1
 1505 0003 25       		.uleb128 0x25
 1506 0004 0E       		.uleb128 0xe
 1507 0005 13       		.uleb128 0x13
 1508 0006 0B       		.uleb128 0xb
 1509 0007 03       		.uleb128 0x3
 1510 0008 0E       		.uleb128 0xe
 1511 0009 1B       		.uleb128 0x1b
 1512 000a 0E       		.uleb128 0xe
 1513 000b 55       		.uleb128 0x55
 1514 000c 17       		.uleb128 0x17
 1515 000d 11       		.uleb128 0x11
 1516 000e 01       		.uleb128 0x1
 1517 000f 10       		.uleb128 0x10
 1518 0010 17       		.uleb128 0x17
 1519 0011 00       		.byte	0
 1520 0012 00       		.byte	0
 1521 0013 02       		.uleb128 0x2
 1522 0014 24       		.uleb128 0x24
 1523 0015 00       		.byte	0
 1524 0016 0B       		.uleb128 0xb
 1525 0017 0B       		.uleb128 0xb
 1526 0018 3E       		.uleb128 0x3e
 1527 0019 0B       		.uleb128 0xb
 1528 001a 03       		.uleb128 0x3
 1529 001b 0E       		.uleb128 0xe
 1530 001c 00       		.byte	0
 1531 001d 00       		.byte	0
 1532 001e 03       		.uleb128 0x3
 1533 001f 24       		.uleb128 0x24
 1534 0020 00       		.byte	0
 1535 0021 0B       		.uleb128 0xb
 1536 0022 0B       		.uleb128 0xb
 1537 0023 3E       		.uleb128 0x3e
 1538 0024 0B       		.uleb128 0xb
 1539 0025 03       		.uleb128 0x3
 1540 0026 08       		.uleb128 0x8
 1541 0027 00       		.byte	0
 1542 0028 00       		.byte	0
 1543 0029 04       		.uleb128 0x4
 1544 002a 16       		.uleb128 0x16
 1545 002b 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 63


 1546 002c 03       		.uleb128 0x3
 1547 002d 0E       		.uleb128 0xe
 1548 002e 3A       		.uleb128 0x3a
 1549 002f 0B       		.uleb128 0xb
 1550 0030 3B       		.uleb128 0x3b
 1551 0031 05       		.uleb128 0x5
 1552 0032 49       		.uleb128 0x49
 1553 0033 13       		.uleb128 0x13
 1554 0034 00       		.byte	0
 1555 0035 00       		.byte	0
 1556 0036 05       		.uleb128 0x5
 1557 0037 2E       		.uleb128 0x2e
 1558 0038 01       		.byte	0x1
 1559 0039 3F       		.uleb128 0x3f
 1560 003a 19       		.uleb128 0x19
 1561 003b 03       		.uleb128 0x3
 1562 003c 0E       		.uleb128 0xe
 1563 003d 3A       		.uleb128 0x3a
 1564 003e 0B       		.uleb128 0xb
 1565 003f 3B       		.uleb128 0x3b
 1566 0040 0B       		.uleb128 0xb
 1567 0041 27       		.uleb128 0x27
 1568 0042 19       		.uleb128 0x19
 1569 0043 11       		.uleb128 0x11
 1570 0044 01       		.uleb128 0x1
 1571 0045 12       		.uleb128 0x12
 1572 0046 06       		.uleb128 0x6
 1573 0047 40       		.uleb128 0x40
 1574 0048 18       		.uleb128 0x18
 1575 0049 9742     		.uleb128 0x2117
 1576 004b 19       		.uleb128 0x19
 1577 004c 01       		.uleb128 0x1
 1578 004d 13       		.uleb128 0x13
 1579 004e 00       		.byte	0
 1580 004f 00       		.byte	0
 1581 0050 06       		.uleb128 0x6
 1582 0051 05       		.uleb128 0x5
 1583 0052 00       		.byte	0
 1584 0053 03       		.uleb128 0x3
 1585 0054 0E       		.uleb128 0xe
 1586 0055 3A       		.uleb128 0x3a
 1587 0056 0B       		.uleb128 0xb
 1588 0057 3B       		.uleb128 0x3b
 1589 0058 0B       		.uleb128 0xb
 1590 0059 49       		.uleb128 0x49
 1591 005a 13       		.uleb128 0x13
 1592 005b 02       		.uleb128 0x2
 1593 005c 18       		.uleb128 0x18
 1594 005d 00       		.byte	0
 1595 005e 00       		.byte	0
 1596 005f 07       		.uleb128 0x7
 1597 0060 34       		.uleb128 0x34
 1598 0061 00       		.byte	0
 1599 0062 03       		.uleb128 0x3
 1600 0063 0E       		.uleb128 0xe
 1601 0064 3A       		.uleb128 0x3a
 1602 0065 0B       		.uleb128 0xb
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 64


 1603 0066 3B       		.uleb128 0x3b
 1604 0067 0B       		.uleb128 0xb
 1605 0068 49       		.uleb128 0x49
 1606 0069 13       		.uleb128 0x13
 1607 006a 02       		.uleb128 0x2
 1608 006b 18       		.uleb128 0x18
 1609 006c 00       		.byte	0
 1610 006d 00       		.byte	0
 1611 006e 08       		.uleb128 0x8
 1612 006f 05       		.uleb128 0x5
 1613 0070 00       		.byte	0
 1614 0071 03       		.uleb128 0x3
 1615 0072 0E       		.uleb128 0xe
 1616 0073 3A       		.uleb128 0x3a
 1617 0074 0B       		.uleb128 0xb
 1618 0075 3B       		.uleb128 0x3b
 1619 0076 0B       		.uleb128 0xb
 1620 0077 49       		.uleb128 0x49
 1621 0078 13       		.uleb128 0x13
 1622 0079 02       		.uleb128 0x2
 1623 007a 17       		.uleb128 0x17
 1624 007b 00       		.byte	0
 1625 007c 00       		.byte	0
 1626 007d 09       		.uleb128 0x9
 1627 007e 898201   		.uleb128 0x4109
 1628 0081 01       		.byte	0x1
 1629 0082 11       		.uleb128 0x11
 1630 0083 01       		.uleb128 0x1
 1631 0084 31       		.uleb128 0x31
 1632 0085 13       		.uleb128 0x13
 1633 0086 01       		.uleb128 0x1
 1634 0087 13       		.uleb128 0x13
 1635 0088 00       		.byte	0
 1636 0089 00       		.byte	0
 1637 008a 0A       		.uleb128 0xa
 1638 008b 8A8201   		.uleb128 0x410a
 1639 008e 00       		.byte	0
 1640 008f 02       		.uleb128 0x2
 1641 0090 18       		.uleb128 0x18
 1642 0091 9142     		.uleb128 0x2111
 1643 0093 18       		.uleb128 0x18
 1644 0094 00       		.byte	0
 1645 0095 00       		.byte	0
 1646 0096 0B       		.uleb128 0xb
 1647 0097 898201   		.uleb128 0x4109
 1648 009a 00       		.byte	0
 1649 009b 11       		.uleb128 0x11
 1650 009c 01       		.uleb128 0x1
 1651 009d 31       		.uleb128 0x31
 1652 009e 13       		.uleb128 0x13
 1653 009f 00       		.byte	0
 1654 00a0 00       		.byte	0
 1655 00a1 0C       		.uleb128 0xc
 1656 00a2 898201   		.uleb128 0x4109
 1657 00a5 01       		.byte	0x1
 1658 00a6 11       		.uleb128 0x11
 1659 00a7 01       		.uleb128 0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 65


 1660 00a8 31       		.uleb128 0x31
 1661 00a9 13       		.uleb128 0x13
 1662 00aa 00       		.byte	0
 1663 00ab 00       		.byte	0
 1664 00ac 0D       		.uleb128 0xd
 1665 00ad 34       		.uleb128 0x34
 1666 00ae 00       		.byte	0
 1667 00af 03       		.uleb128 0x3
 1668 00b0 08       		.uleb128 0x8
 1669 00b1 3A       		.uleb128 0x3a
 1670 00b2 0B       		.uleb128 0xb
 1671 00b3 3B       		.uleb128 0x3b
 1672 00b4 0B       		.uleb128 0xb
 1673 00b5 49       		.uleb128 0x49
 1674 00b6 13       		.uleb128 0x13
 1675 00b7 02       		.uleb128 0x2
 1676 00b8 17       		.uleb128 0x17
 1677 00b9 00       		.byte	0
 1678 00ba 00       		.byte	0
 1679 00bb 0E       		.uleb128 0xe
 1680 00bc 2E       		.uleb128 0x2e
 1681 00bd 01       		.byte	0x1
 1682 00be 3F       		.uleb128 0x3f
 1683 00bf 19       		.uleb128 0x19
 1684 00c0 03       		.uleb128 0x3
 1685 00c1 0E       		.uleb128 0xe
 1686 00c2 3A       		.uleb128 0x3a
 1687 00c3 0B       		.uleb128 0xb
 1688 00c4 3B       		.uleb128 0x3b
 1689 00c5 05       		.uleb128 0x5
 1690 00c6 27       		.uleb128 0x27
 1691 00c7 19       		.uleb128 0x19
 1692 00c8 11       		.uleb128 0x11
 1693 00c9 01       		.uleb128 0x1
 1694 00ca 12       		.uleb128 0x12
 1695 00cb 06       		.uleb128 0x6
 1696 00cc 40       		.uleb128 0x40
 1697 00cd 18       		.uleb128 0x18
 1698 00ce 9742     		.uleb128 0x2117
 1699 00d0 19       		.uleb128 0x19
 1700 00d1 01       		.uleb128 0x1
 1701 00d2 13       		.uleb128 0x13
 1702 00d3 00       		.byte	0
 1703 00d4 00       		.byte	0
 1704 00d5 0F       		.uleb128 0xf
 1705 00d6 34       		.uleb128 0x34
 1706 00d7 00       		.byte	0
 1707 00d8 03       		.uleb128 0x3
 1708 00d9 08       		.uleb128 0x8
 1709 00da 3A       		.uleb128 0x3a
 1710 00db 0B       		.uleb128 0xb
 1711 00dc 3B       		.uleb128 0x3b
 1712 00dd 05       		.uleb128 0x5
 1713 00de 49       		.uleb128 0x49
 1714 00df 13       		.uleb128 0x13
 1715 00e0 02       		.uleb128 0x2
 1716 00e1 17       		.uleb128 0x17
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 66


 1717 00e2 00       		.byte	0
 1718 00e3 00       		.byte	0
 1719 00e4 10       		.uleb128 0x10
 1720 00e5 34       		.uleb128 0x34
 1721 00e6 00       		.byte	0
 1722 00e7 03       		.uleb128 0x3
 1723 00e8 08       		.uleb128 0x8
 1724 00e9 3A       		.uleb128 0x3a
 1725 00ea 0B       		.uleb128 0xb
 1726 00eb 3B       		.uleb128 0x3b
 1727 00ec 05       		.uleb128 0x5
 1728 00ed 49       		.uleb128 0x49
 1729 00ee 13       		.uleb128 0x13
 1730 00ef 02       		.uleb128 0x2
 1731 00f0 18       		.uleb128 0x18
 1732 00f1 00       		.byte	0
 1733 00f2 00       		.byte	0
 1734 00f3 11       		.uleb128 0x11
 1735 00f4 34       		.uleb128 0x34
 1736 00f5 00       		.byte	0
 1737 00f6 03       		.uleb128 0x3
 1738 00f7 0E       		.uleb128 0xe
 1739 00f8 3A       		.uleb128 0x3a
 1740 00f9 0B       		.uleb128 0xb
 1741 00fa 3B       		.uleb128 0x3b
 1742 00fb 05       		.uleb128 0x5
 1743 00fc 49       		.uleb128 0x49
 1744 00fd 13       		.uleb128 0x13
 1745 00fe 02       		.uleb128 0x2
 1746 00ff 17       		.uleb128 0x17
 1747 0100 00       		.byte	0
 1748 0101 00       		.byte	0
 1749 0102 12       		.uleb128 0x12
 1750 0103 2E       		.uleb128 0x2e
 1751 0104 01       		.byte	0x1
 1752 0105 3F       		.uleb128 0x3f
 1753 0106 19       		.uleb128 0x19
 1754 0107 03       		.uleb128 0x3
 1755 0108 0E       		.uleb128 0xe
 1756 0109 3A       		.uleb128 0x3a
 1757 010a 0B       		.uleb128 0xb
 1758 010b 3B       		.uleb128 0x3b
 1759 010c 05       		.uleb128 0x5
 1760 010d 27       		.uleb128 0x27
 1761 010e 19       		.uleb128 0x19
 1762 010f 49       		.uleb128 0x49
 1763 0110 13       		.uleb128 0x13
 1764 0111 11       		.uleb128 0x11
 1765 0112 01       		.uleb128 0x1
 1766 0113 12       		.uleb128 0x12
 1767 0114 06       		.uleb128 0x6
 1768 0115 40       		.uleb128 0x40
 1769 0116 18       		.uleb128 0x18
 1770 0117 9742     		.uleb128 0x2117
 1771 0119 19       		.uleb128 0x19
 1772 011a 01       		.uleb128 0x1
 1773 011b 13       		.uleb128 0x13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 67


 1774 011c 00       		.byte	0
 1775 011d 00       		.byte	0
 1776 011e 13       		.uleb128 0x13
 1777 011f 05       		.uleb128 0x5
 1778 0120 00       		.byte	0
 1779 0121 03       		.uleb128 0x3
 1780 0122 0E       		.uleb128 0xe
 1781 0123 3A       		.uleb128 0x3a
 1782 0124 0B       		.uleb128 0xb
 1783 0125 3B       		.uleb128 0x3b
 1784 0126 05       		.uleb128 0x5
 1785 0127 49       		.uleb128 0x49
 1786 0128 13       		.uleb128 0x13
 1787 0129 02       		.uleb128 0x2
 1788 012a 17       		.uleb128 0x17
 1789 012b 00       		.byte	0
 1790 012c 00       		.byte	0
 1791 012d 14       		.uleb128 0x14
 1792 012e 34       		.uleb128 0x34
 1793 012f 00       		.byte	0
 1794 0130 03       		.uleb128 0x3
 1795 0131 0E       		.uleb128 0xe
 1796 0132 3A       		.uleb128 0x3a
 1797 0133 0B       		.uleb128 0xb
 1798 0134 3B       		.uleb128 0x3b
 1799 0135 05       		.uleb128 0x5
 1800 0136 49       		.uleb128 0x49
 1801 0137 13       		.uleb128 0x13
 1802 0138 02       		.uleb128 0x2
 1803 0139 18       		.uleb128 0x18
 1804 013a 00       		.byte	0
 1805 013b 00       		.byte	0
 1806 013c 15       		.uleb128 0x15
 1807 013d 34       		.uleb128 0x34
 1808 013e 00       		.byte	0
 1809 013f 03       		.uleb128 0x3
 1810 0140 0E       		.uleb128 0xe
 1811 0141 3A       		.uleb128 0x3a
 1812 0142 0B       		.uleb128 0xb
 1813 0143 3B       		.uleb128 0x3b
 1814 0144 05       		.uleb128 0x5
 1815 0145 49       		.uleb128 0x49
 1816 0146 13       		.uleb128 0x13
 1817 0147 1C       		.uleb128 0x1c
 1818 0148 0B       		.uleb128 0xb
 1819 0149 00       		.byte	0
 1820 014a 00       		.byte	0
 1821 014b 16       		.uleb128 0x16
 1822 014c 05       		.uleb128 0x5
 1823 014d 00       		.byte	0
 1824 014e 03       		.uleb128 0x3
 1825 014f 0E       		.uleb128 0xe
 1826 0150 3A       		.uleb128 0x3a
 1827 0151 0B       		.uleb128 0xb
 1828 0152 3B       		.uleb128 0x3b
 1829 0153 05       		.uleb128 0x5
 1830 0154 49       		.uleb128 0x49
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 68


 1831 0155 13       		.uleb128 0x13
 1832 0156 02       		.uleb128 0x2
 1833 0157 18       		.uleb128 0x18
 1834 0158 00       		.byte	0
 1835 0159 00       		.byte	0
 1836 015a 17       		.uleb128 0x17
 1837 015b 34       		.uleb128 0x34
 1838 015c 00       		.byte	0
 1839 015d 03       		.uleb128 0x3
 1840 015e 08       		.uleb128 0x8
 1841 015f 3A       		.uleb128 0x3a
 1842 0160 0B       		.uleb128 0xb
 1843 0161 3B       		.uleb128 0x3b
 1844 0162 05       		.uleb128 0x5
 1845 0163 49       		.uleb128 0x49
 1846 0164 13       		.uleb128 0x13
 1847 0165 1C       		.uleb128 0x1c
 1848 0166 0B       		.uleb128 0xb
 1849 0167 00       		.byte	0
 1850 0168 00       		.byte	0
 1851 0169 18       		.uleb128 0x18
 1852 016a 05       		.uleb128 0x5
 1853 016b 00       		.byte	0
 1854 016c 03       		.uleb128 0x3
 1855 016d 08       		.uleb128 0x8
 1856 016e 3A       		.uleb128 0x3a
 1857 016f 0B       		.uleb128 0xb
 1858 0170 3B       		.uleb128 0x3b
 1859 0171 05       		.uleb128 0x5
 1860 0172 49       		.uleb128 0x49
 1861 0173 13       		.uleb128 0x13
 1862 0174 02       		.uleb128 0x2
 1863 0175 17       		.uleb128 0x17
 1864 0176 00       		.byte	0
 1865 0177 00       		.byte	0
 1866 0178 19       		.uleb128 0x19
 1867 0179 05       		.uleb128 0x5
 1868 017a 00       		.byte	0
 1869 017b 03       		.uleb128 0x3
 1870 017c 08       		.uleb128 0x8
 1871 017d 3A       		.uleb128 0x3a
 1872 017e 0B       		.uleb128 0xb
 1873 017f 3B       		.uleb128 0x3b
 1874 0180 05       		.uleb128 0x5
 1875 0181 49       		.uleb128 0x49
 1876 0182 13       		.uleb128 0x13
 1877 0183 02       		.uleb128 0x2
 1878 0184 18       		.uleb128 0x18
 1879 0185 00       		.byte	0
 1880 0186 00       		.byte	0
 1881 0187 1A       		.uleb128 0x1a
 1882 0188 01       		.uleb128 0x1
 1883 0189 01       		.byte	0x1
 1884 018a 49       		.uleb128 0x49
 1885 018b 13       		.uleb128 0x13
 1886 018c 01       		.uleb128 0x1
 1887 018d 13       		.uleb128 0x13
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 69


 1888 018e 00       		.byte	0
 1889 018f 00       		.byte	0
 1890 0190 1B       		.uleb128 0x1b
 1891 0191 21       		.uleb128 0x21
 1892 0192 00       		.byte	0
 1893 0193 49       		.uleb128 0x49
 1894 0194 13       		.uleb128 0x13
 1895 0195 2F       		.uleb128 0x2f
 1896 0196 0B       		.uleb128 0xb
 1897 0197 00       		.byte	0
 1898 0198 00       		.byte	0
 1899 0199 1C       		.uleb128 0x1c
 1900 019a 34       		.uleb128 0x34
 1901 019b 00       		.byte	0
 1902 019c 03       		.uleb128 0x3
 1903 019d 0E       		.uleb128 0xe
 1904 019e 3A       		.uleb128 0x3a
 1905 019f 0B       		.uleb128 0xb
 1906 01a0 3B       		.uleb128 0x3b
 1907 01a1 05       		.uleb128 0x5
 1908 01a2 49       		.uleb128 0x49
 1909 01a3 13       		.uleb128 0x13
 1910 01a4 3F       		.uleb128 0x3f
 1911 01a5 19       		.uleb128 0x19
 1912 01a6 3C       		.uleb128 0x3c
 1913 01a7 19       		.uleb128 0x19
 1914 01a8 00       		.byte	0
 1915 01a9 00       		.byte	0
 1916 01aa 1D       		.uleb128 0x1d
 1917 01ab 34       		.uleb128 0x34
 1918 01ac 00       		.byte	0
 1919 01ad 03       		.uleb128 0x3
 1920 01ae 0E       		.uleb128 0xe
 1921 01af 3A       		.uleb128 0x3a
 1922 01b0 0B       		.uleb128 0xb
 1923 01b1 3B       		.uleb128 0x3b
 1924 01b2 0B       		.uleb128 0xb
 1925 01b3 49       		.uleb128 0x49
 1926 01b4 13       		.uleb128 0x13
 1927 01b5 3F       		.uleb128 0x3f
 1928 01b6 19       		.uleb128 0x19
 1929 01b7 02       		.uleb128 0x2
 1930 01b8 18       		.uleb128 0x18
 1931 01b9 00       		.byte	0
 1932 01ba 00       		.byte	0
 1933 01bb 1E       		.uleb128 0x1e
 1934 01bc 26       		.uleb128 0x26
 1935 01bd 00       		.byte	0
 1936 01be 49       		.uleb128 0x49
 1937 01bf 13       		.uleb128 0x13
 1938 01c0 00       		.byte	0
 1939 01c1 00       		.byte	0
 1940 01c2 1F       		.uleb128 0x1f
 1941 01c3 2E       		.uleb128 0x2e
 1942 01c4 01       		.byte	0x1
 1943 01c5 3F       		.uleb128 0x3f
 1944 01c6 19       		.uleb128 0x19
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 70


 1945 01c7 03       		.uleb128 0x3
 1946 01c8 0E       		.uleb128 0xe
 1947 01c9 3A       		.uleb128 0x3a
 1948 01ca 0B       		.uleb128 0xb
 1949 01cb 3B       		.uleb128 0x3b
 1950 01cc 0B       		.uleb128 0xb
 1951 01cd 27       		.uleb128 0x27
 1952 01ce 19       		.uleb128 0x19
 1953 01cf 3C       		.uleb128 0x3c
 1954 01d0 19       		.uleb128 0x19
 1955 01d1 01       		.uleb128 0x1
 1956 01d2 13       		.uleb128 0x13
 1957 01d3 00       		.byte	0
 1958 01d4 00       		.byte	0
 1959 01d5 20       		.uleb128 0x20
 1960 01d6 05       		.uleb128 0x5
 1961 01d7 00       		.byte	0
 1962 01d8 49       		.uleb128 0x49
 1963 01d9 13       		.uleb128 0x13
 1964 01da 00       		.byte	0
 1965 01db 00       		.byte	0
 1966 01dc 21       		.uleb128 0x21
 1967 01dd 2E       		.uleb128 0x2e
 1968 01de 00       		.byte	0
 1969 01df 3F       		.uleb128 0x3f
 1970 01e0 19       		.uleb128 0x19
 1971 01e1 03       		.uleb128 0x3
 1972 01e2 0E       		.uleb128 0xe
 1973 01e3 3A       		.uleb128 0x3a
 1974 01e4 0B       		.uleb128 0xb
 1975 01e5 3B       		.uleb128 0x3b
 1976 01e6 0B       		.uleb128 0xb
 1977 01e7 27       		.uleb128 0x27
 1978 01e8 19       		.uleb128 0x19
 1979 01e9 49       		.uleb128 0x49
 1980 01ea 13       		.uleb128 0x13
 1981 01eb 3C       		.uleb128 0x3c
 1982 01ec 19       		.uleb128 0x19
 1983 01ed 00       		.byte	0
 1984 01ee 00       		.byte	0
 1985 01ef 22       		.uleb128 0x22
 1986 01f0 2E       		.uleb128 0x2e
 1987 01f1 00       		.byte	0
 1988 01f2 3F       		.uleb128 0x3f
 1989 01f3 19       		.uleb128 0x19
 1990 01f4 03       		.uleb128 0x3
 1991 01f5 0E       		.uleb128 0xe
 1992 01f6 3A       		.uleb128 0x3a
 1993 01f7 0B       		.uleb128 0xb
 1994 01f8 3B       		.uleb128 0x3b
 1995 01f9 0B       		.uleb128 0xb
 1996 01fa 27       		.uleb128 0x27
 1997 01fb 19       		.uleb128 0x19
 1998 01fc 3C       		.uleb128 0x3c
 1999 01fd 19       		.uleb128 0x19
 2000 01fe 00       		.byte	0
 2001 01ff 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 71


 2002 0200 00       		.byte	0
 2003              		.section	.debug_loc,"",%progbits
 2004              	.Ldebug_loc0:
 2005              	.LLST0:
 2006 0000 00000000 		.4byte	.LVL2
 2007 0004 07000000 		.4byte	.LVL3-1
 2008 0008 0100     		.2byte	0x1
 2009 000a 50       		.byte	0x50
 2010 000b 07000000 		.4byte	.LVL3-1
 2011 000f 18000000 		.4byte	.LFE1
 2012 0013 0400     		.2byte	0x4
 2013 0015 F3       		.byte	0xf3
 2014 0016 01       		.uleb128 0x1
 2015 0017 50       		.byte	0x50
 2016 0018 9F       		.byte	0x9f
 2017 0019 00000000 		.4byte	0
 2018 001d 00000000 		.4byte	0
 2019              	.LLST1:
 2020 0021 02000000 		.4byte	.LVL6
 2021 0025 06000000 		.4byte	.LVL7
 2022 0029 0200     		.2byte	0x2
 2023 002b 30       		.byte	0x30
 2024 002c 9F       		.byte	0x9f
 2025 002d 06000000 		.4byte	.LVL7
 2026 0031 0E000000 		.4byte	.LVL9
 2027 0035 0100     		.2byte	0x1
 2028 0037 54       		.byte	0x54
 2029 0038 10000000 		.4byte	.LVL10
 2030 003c 16000000 		.4byte	.LFE2
 2031 0040 0100     		.2byte	0x1
 2032 0042 54       		.byte	0x54
 2033 0043 00000000 		.4byte	0
 2034 0047 00000000 		.4byte	0
 2035              	.LLST2:
 2036 004b 12000000 		.4byte	.LVL13
 2037 004f 34000000 		.4byte	.LVL17
 2038 0053 0100     		.2byte	0x1
 2039 0055 54       		.byte	0x54
 2040 0056 36000000 		.4byte	.LVL18
 2041 005a 3C000000 		.4byte	.LVL19
 2042 005e 0100     		.2byte	0x1
 2043 0060 54       		.byte	0x54
 2044 0061 00000000 		.4byte	0
 2045 0065 00000000 		.4byte	0
 2046              	.LLST3:
 2047 0069 1C000000 		.4byte	.LVL14
 2048 006d 28000000 		.4byte	.LVL15
 2049 0071 0100     		.2byte	0x1
 2050 0073 53       		.byte	0x53
 2051 0074 28000000 		.4byte	.LVL15
 2052 0078 34000000 		.4byte	.LVL17
 2053 007c 0700     		.2byte	0x7
 2054 007e 31       		.byte	0x31
 2055 007f 74       		.byte	0x74
 2056 0080 00       		.sleb128 0
 2057 0081 37       		.byte	0x37
 2058 0082 1A       		.byte	0x1a
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 72


 2059 0083 24       		.byte	0x24
 2060 0084 9F       		.byte	0x9f
 2061 0085 34000000 		.4byte	.LVL17
 2062 0089 36000000 		.4byte	.LVL18
 2063 008d 0700     		.2byte	0x7
 2064 008f 31       		.byte	0x31
 2065 0090 74       		.byte	0x74
 2066 0091 7F       		.sleb128 -1
 2067 0092 37       		.byte	0x37
 2068 0093 1A       		.byte	0x1a
 2069 0094 24       		.byte	0x24
 2070 0095 9F       		.byte	0x9f
 2071 0096 00000000 		.4byte	0
 2072 009a 00000000 		.4byte	0
 2073              	.LLST4:
 2074 009e 00000000 		.4byte	.LVL20
 2075 00a2 1E000000 		.4byte	.LVL24
 2076 00a6 0100     		.2byte	0x1
 2077 00a8 50       		.byte	0x50
 2078 00a9 1E000000 		.4byte	.LVL24
 2079 00ad 32000000 		.4byte	.LVL25
 2080 00b1 0400     		.2byte	0x4
 2081 00b3 F3       		.byte	0xf3
 2082 00b4 01       		.uleb128 0x1
 2083 00b5 50       		.byte	0x50
 2084 00b6 9F       		.byte	0x9f
 2085 00b7 32000000 		.4byte	.LVL25
 2086 00bb 36000000 		.4byte	.LVL26
 2087 00bf 0100     		.2byte	0x1
 2088 00c1 50       		.byte	0x50
 2089 00c2 36000000 		.4byte	.LVL26
 2090 00c6 74000000 		.4byte	.LFE6
 2091 00ca 0400     		.2byte	0x4
 2092 00cc F3       		.byte	0xf3
 2093 00cd 01       		.uleb128 0x1
 2094 00ce 50       		.byte	0x50
 2095 00cf 9F       		.byte	0x9f
 2096 00d0 00000000 		.4byte	0
 2097 00d4 00000000 		.4byte	0
 2098              	.LLST5:
 2099 00d8 12000000 		.4byte	.LVL23
 2100 00dc 62000000 		.4byte	.LVL27
 2101 00e0 0100     		.2byte	0x1
 2102 00e2 54       		.byte	0x54
 2103 00e3 00000000 		.4byte	0
 2104 00e7 00000000 		.4byte	0
 2105              	.LLST7:
 2106 00eb 00000000 		.4byte	.LVL28
 2107 00ef 04000000 		.4byte	.LVL30
 2108 00f3 0100     		.2byte	0x1
 2109 00f5 50       		.byte	0x50
 2110 00f6 04000000 		.4byte	.LVL30
 2111 00fa 0E000000 		.4byte	.LFE7
 2112 00fe 0400     		.2byte	0x4
 2113 0100 F3       		.byte	0xf3
 2114 0101 01       		.uleb128 0x1
 2115 0102 50       		.byte	0x50
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 73


 2116 0103 9F       		.byte	0x9f
 2117 0104 00000000 		.4byte	0
 2118 0108 00000000 		.4byte	0
 2119              	.LLST8:
 2120 010c 02000000 		.4byte	.LVL29
 2121 0110 0C000000 		.4byte	.LVL32
 2122 0114 0200     		.2byte	0x2
 2123 0116 30       		.byte	0x30
 2124 0117 9F       		.byte	0x9f
 2125 0118 0C000000 		.4byte	.LVL32
 2126 011c 0E000000 		.4byte	.LFE7
 2127 0120 0200     		.2byte	0x2
 2128 0122 31       		.byte	0x31
 2129 0123 9F       		.byte	0x9f
 2130 0124 00000000 		.4byte	0
 2131 0128 00000000 		.4byte	0
 2132              	.LLST9:
 2133 012c 02000000 		.4byte	.LVL29
 2134 0130 0C000000 		.4byte	.LVL32
 2135 0134 0200     		.2byte	0x2
 2136 0136 30       		.byte	0x30
 2137 0137 9F       		.byte	0x9f
 2138 0138 0C000000 		.4byte	.LVL32
 2139 013c 0E000000 		.4byte	.LFE7
 2140 0140 0100     		.2byte	0x1
 2141 0142 50       		.byte	0x50
 2142 0143 00000000 		.4byte	0
 2143 0147 00000000 		.4byte	0
 2144              	.LLST10:
 2145 014b 02000000 		.4byte	.LVL33
 2146 014f 08000000 		.4byte	.LVL34
 2147 0153 0200     		.2byte	0x2
 2148 0155 30       		.byte	0x30
 2149 0156 9F       		.byte	0x9f
 2150 0157 08000000 		.4byte	.LVL34
 2151 015b 14000000 		.4byte	.LVL37
 2152 015f 0100     		.2byte	0x1
 2153 0161 54       		.byte	0x54
 2154 0162 16000000 		.4byte	.LVL38
 2155 0166 1E000000 		.4byte	.LFE8
 2156 016a 0100     		.2byte	0x1
 2157 016c 54       		.byte	0x54
 2158 016d 00000000 		.4byte	0
 2159 0171 00000000 		.4byte	0
 2160              	.LLST11:
 2161 0175 02000000 		.4byte	.LVL33
 2162 0179 08000000 		.4byte	.LVL34
 2163 017d 0200     		.2byte	0x2
 2164 017f 30       		.byte	0x30
 2165 0180 9F       		.byte	0x9f
 2166 0181 08000000 		.4byte	.LVL34
 2167 0185 1E000000 		.4byte	.LFE8
 2168 0189 0100     		.2byte	0x1
 2169 018b 55       		.byte	0x55
 2170 018c 00000000 		.4byte	0
 2171 0190 00000000 		.4byte	0
 2172              	.LLST12:
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 74


 2173 0194 00000000 		.4byte	.LVL39
 2174 0198 0A000000 		.4byte	.LVL40
 2175 019c 0200     		.2byte	0x2
 2176 019e 30       		.byte	0x30
 2177 019f 9F       		.byte	0x9f
 2178 01a0 0A000000 		.4byte	.LVL40
 2179 01a4 10000000 		.4byte	.LFE9
 2180 01a8 0200     		.2byte	0x2
 2181 01aa 31       		.byte	0x31
 2182 01ab 9F       		.byte	0x9f
 2183 01ac 00000000 		.4byte	0
 2184 01b0 00000000 		.4byte	0
 2185              	.LLST13:
 2186 01b4 00000000 		.4byte	.LVL41
 2187 01b8 0A000000 		.4byte	.LVL42
 2188 01bc 0200     		.2byte	0x2
 2189 01be 30       		.byte	0x30
 2190 01bf 9F       		.byte	0x9f
 2191 01c0 0A000000 		.4byte	.LVL42
 2192 01c4 10000000 		.4byte	.LFE10
 2193 01c8 0200     		.2byte	0x2
 2194 01ca 31       		.byte	0x31
 2195 01cb 9F       		.byte	0x9f
 2196 01cc 00000000 		.4byte	0
 2197 01d0 00000000 		.4byte	0
 2198              	.LLST14:
 2199 01d4 00000000 		.4byte	.LVL43
 2200 01d8 04000000 		.4byte	.LVL44
 2201 01dc 0100     		.2byte	0x1
 2202 01de 50       		.byte	0x50
 2203 01df 04000000 		.4byte	.LVL44
 2204 01e3 0C000000 		.4byte	.LFE11
 2205 01e7 0400     		.2byte	0x4
 2206 01e9 F3       		.byte	0xf3
 2207 01ea 01       		.uleb128 0x1
 2208 01eb 50       		.byte	0x50
 2209 01ec 9F       		.byte	0x9f
 2210 01ed 00000000 		.4byte	0
 2211 01f1 00000000 		.4byte	0
 2212              	.LLST15:
 2213 01f5 06000000 		.4byte	.LVL45
 2214 01f9 0A000000 		.4byte	.LVL46
 2215 01fd 0500     		.2byte	0x5
 2216 01ff 70       		.byte	0x70
 2217 0200 00       		.sleb128 0
 2218 0201 32       		.byte	0x32
 2219 0202 25       		.byte	0x25
 2220 0203 9F       		.byte	0x9f
 2221 0204 00000000 		.4byte	0
 2222 0208 00000000 		.4byte	0
 2223              	.LLST16:
 2224 020c 00000000 		.4byte	.LVL47
 2225 0210 0C000000 		.4byte	.LVL49
 2226 0214 0100     		.2byte	0x1
 2227 0216 50       		.byte	0x50
 2228 0217 0C000000 		.4byte	.LVL49
 2229 021b B4000000 		.4byte	.LFE4
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 75


 2230 021f 0400     		.2byte	0x4
 2231 0221 F3       		.byte	0xf3
 2232 0222 01       		.uleb128 0x1
 2233 0223 50       		.byte	0x50
 2234 0224 9F       		.byte	0x9f
 2235 0225 00000000 		.4byte	0
 2236 0229 00000000 		.4byte	0
 2237              	.LLST17:
 2238 022d 5E000000 		.4byte	.LVL58
 2239 0231 66000000 		.4byte	.LVL59
 2240 0235 0500     		.2byte	0x5
 2241 0237 72       		.byte	0x72
 2242 0238 00       		.sleb128 0
 2243 0239 38       		.byte	0x38
 2244 023a 24       		.byte	0x24
 2245 023b 9F       		.byte	0x9f
 2246 023c 66000000 		.4byte	.LVL59
 2247 0240 68000000 		.4byte	.LVL60
 2248 0244 0100     		.2byte	0x1
 2249 0246 53       		.byte	0x53
 2250 0247 68000000 		.4byte	.LVL60
 2251 024b 7C000000 		.4byte	.LVL62
 2252 024f 0100     		.2byte	0x1
 2253 0251 50       		.byte	0x50
 2254 0252 00000000 		.4byte	0
 2255 0256 00000000 		.4byte	0
 2256              	.LLST18:
 2257 025a 26000000 		.4byte	.LVL51
 2258 025e 2A000000 		.4byte	.LVL52
 2259 0262 0100     		.2byte	0x1
 2260 0264 55       		.byte	0x55
 2261 0265 2E000000 		.4byte	.LVL53
 2262 0269 9C000000 		.4byte	.LVL65
 2263 026d 0100     		.2byte	0x1
 2264 026f 55       		.byte	0x55
 2265 0270 00000000 		.4byte	0
 2266 0274 00000000 		.4byte	0
 2267              	.LLST19:
 2268 0278 14000000 		.4byte	.LVL50
 2269 027c 40000000 		.4byte	.LVL55
 2270 0280 0100     		.2byte	0x1
 2271 0282 50       		.byte	0x50
 2272 0283 40000000 		.4byte	.LVL55
 2273 0287 43000000 		.4byte	.LVL56-1
 2274 028b 0A00     		.2byte	0xa
 2275 028d 74       		.byte	0x74
 2276 028e 00       		.sleb128 0
 2277 028f 31       		.byte	0x31
 2278 0290 24       		.byte	0x24
 2279 0291 03       		.byte	0x3
 2280 0292 00000000 		.4byte	CapSense_1_rawFilterData1
 2281 0296 22       		.byte	0x22
 2282 0297 4C000000 		.4byte	.LVL57
 2283 029b 68000000 		.4byte	.LVL60
 2284 029f 0100     		.2byte	0x1
 2285 02a1 50       		.byte	0x50
 2286 02a2 68000000 		.4byte	.LVL60
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 76


 2287 02a6 7C000000 		.4byte	.LVL62
 2288 02aa 0A00     		.2byte	0xa
 2289 02ac 74       		.byte	0x74
 2290 02ad 00       		.sleb128 0
 2291 02ae 31       		.byte	0x31
 2292 02af 24       		.byte	0x24
 2293 02b0 03       		.byte	0x3
 2294 02b1 00000000 		.4byte	CapSense_1_rawFilterData1
 2295 02b5 22       		.byte	0x22
 2296 02b6 00000000 		.4byte	0
 2297 02ba 00000000 		.4byte	0
 2298              	.LLST20:
 2299 02be 26000000 		.4byte	.LVL51
 2300 02c2 2A000000 		.4byte	.LVL52
 2301 02c6 0200     		.2byte	0x2
 2302 02c8 31       		.byte	0x31
 2303 02c9 9F       		.byte	0x9f
 2304 02ca 2E000000 		.4byte	.LVL53
 2305 02ce 30000000 		.4byte	.LVL54
 2306 02d2 0200     		.2byte	0x2
 2307 02d4 30       		.byte	0x30
 2308 02d5 9F       		.byte	0x9f
 2309 02d6 30000000 		.4byte	.LVL54
 2310 02da 9C000000 		.4byte	.LVL65
 2311 02de 0100     		.2byte	0x1
 2312 02e0 56       		.byte	0x56
 2313 02e1 00000000 		.4byte	0
 2314 02e5 00000000 		.4byte	0
 2315              	.LLST21:
 2316 02e9 02000000 		.4byte	.LVL66
 2317 02ed 06000000 		.4byte	.LVL67
 2318 02f1 0200     		.2byte	0x2
 2319 02f3 30       		.byte	0x30
 2320 02f4 9F       		.byte	0x9f
 2321 02f5 06000000 		.4byte	.LVL67
 2322 02f9 20000000 		.4byte	.LVL70
 2323 02fd 0100     		.2byte	0x1
 2324 02ff 54       		.byte	0x54
 2325 0300 22000000 		.4byte	.LVL71
 2326 0304 28000000 		.4byte	.LVL72
 2327 0308 0100     		.2byte	0x1
 2328 030a 54       		.byte	0x54
 2329 030b 00000000 		.4byte	0
 2330 030f 00000000 		.4byte	0
 2331              	.LLST22:
 2332 0313 10000000 		.4byte	.LVL68
 2333 0317 1D000000 		.4byte	.LVL69-1
 2334 031b 0100     		.2byte	0x1
 2335 031d 53       		.byte	0x53
 2336 031e 1D000000 		.4byte	.LVL69-1
 2337 0322 20000000 		.4byte	.LVL70
 2338 0326 0700     		.2byte	0x7
 2339 0328 31       		.byte	0x31
 2340 0329 74       		.byte	0x74
 2341 032a 00       		.sleb128 0
 2342 032b 37       		.byte	0x37
 2343 032c 1A       		.byte	0x1a
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 77


 2344 032d 24       		.byte	0x24
 2345 032e 9F       		.byte	0x9f
 2346 032f 20000000 		.4byte	.LVL70
 2347 0333 22000000 		.4byte	.LVL71
 2348 0337 0700     		.2byte	0x7
 2349 0339 31       		.byte	0x31
 2350 033a 74       		.byte	0x74
 2351 033b 7F       		.sleb128 -1
 2352 033c 37       		.byte	0x37
 2353 033d 1A       		.byte	0x1a
 2354 033e 24       		.byte	0x24
 2355 033f 9F       		.byte	0x9f
 2356 0340 00000000 		.4byte	0
 2357 0344 00000000 		.4byte	0
 2358              		.section	.debug_aranges,"",%progbits
 2359 0000 74000000 		.4byte	0x74
 2360 0004 0200     		.2byte	0x2
 2361 0006 00000000 		.4byte	.Ldebug_info0
 2362 000a 04       		.byte	0x4
 2363 000b 00       		.byte	0
 2364 000c 0000     		.2byte	0
 2365 000e 0000     		.2byte	0
 2366 0010 00000000 		.4byte	.LFB0
 2367 0014 4C000000 		.4byte	.LFE0-.LFB0
 2368 0018 00000000 		.4byte	.LFB1
 2369 001c 18000000 		.4byte	.LFE1-.LFB1
 2370 0020 00000000 		.4byte	.LFB2
 2371 0024 16000000 		.4byte	.LFE2-.LFB2
 2372 0028 00000000 		.4byte	.LFB3
 2373 002c 44000000 		.4byte	.LFE3-.LFB3
 2374 0030 00000000 		.4byte	.LFB6
 2375 0034 74000000 		.4byte	.LFE6-.LFB6
 2376 0038 00000000 		.4byte	.LFB7
 2377 003c 0E000000 		.4byte	.LFE7-.LFB7
 2378 0040 00000000 		.4byte	.LFB8
 2379 0044 1E000000 		.4byte	.LFE8-.LFB8
 2380 0048 00000000 		.4byte	.LFB9
 2381 004c 10000000 		.4byte	.LFE9-.LFB9
 2382 0050 00000000 		.4byte	.LFB10
 2383 0054 10000000 		.4byte	.LFE10-.LFB10
 2384 0058 00000000 		.4byte	.LFB11
 2385 005c 0C000000 		.4byte	.LFE11-.LFB11
 2386 0060 00000000 		.4byte	.LFB4
 2387 0064 B4000000 		.4byte	.LFE4-.LFB4
 2388 0068 00000000 		.4byte	.LFB5
 2389 006c 2C000000 		.4byte	.LFE5-.LFB5
 2390 0070 00000000 		.4byte	0
 2391 0074 00000000 		.4byte	0
 2392              		.section	.debug_ranges,"",%progbits
 2393              	.Ldebug_ranges0:
 2394 0000 00000000 		.4byte	.LFB0
 2395 0004 4C000000 		.4byte	.LFE0
 2396 0008 00000000 		.4byte	.LFB1
 2397 000c 18000000 		.4byte	.LFE1
 2398 0010 00000000 		.4byte	.LFB2
 2399 0014 16000000 		.4byte	.LFE2
 2400 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 78


 2401 001c 44000000 		.4byte	.LFE3
 2402 0020 00000000 		.4byte	.LFB6
 2403 0024 74000000 		.4byte	.LFE6
 2404 0028 00000000 		.4byte	.LFB7
 2405 002c 0E000000 		.4byte	.LFE7
 2406 0030 00000000 		.4byte	.LFB8
 2407 0034 1E000000 		.4byte	.LFE8
 2408 0038 00000000 		.4byte	.LFB9
 2409 003c 10000000 		.4byte	.LFE9
 2410 0040 00000000 		.4byte	.LFB10
 2411 0044 10000000 		.4byte	.LFE10
 2412 0048 00000000 		.4byte	.LFB11
 2413 004c 0C000000 		.4byte	.LFE11
 2414 0050 00000000 		.4byte	.LFB4
 2415 0054 B4000000 		.4byte	.LFE4
 2416 0058 00000000 		.4byte	.LFB5
 2417 005c 2C000000 		.4byte	.LFE5
 2418 0060 00000000 		.4byte	0
 2419 0064 00000000 		.4byte	0
 2420              		.section	.debug_line,"",%progbits
 2421              	.Ldebug_line0:
 2422 0000 FF010000 		.section	.debug_str,"MS",%progbits,1
 2422      02007300 
 2422      00000201 
 2422      FB0E0D00 
 2422      01010101 
 2423              	.LASF10:
 2424 0000 75696E74 		.ascii	"uint16\000"
 2424      313600
 2425              	.LASF40:
 2426 0007 66696C74 		.ascii	"filteredRawData\000"
 2426      65726564 
 2426      52617744 
 2426      61746100 
 2427              	.LASF25:
 2428 0017 66696E67 		.ascii	"fingerThreshold\000"
 2428      65725468 
 2428      72657368 
 2428      6F6C6400 
 2429              	.LASF19:
 2430 0027 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 2430      656E7365 
 2430      5F315F49 
 2430      6E697469 
 2430      616C697A 
 2431              	.LASF16:
 2432 0049 43617053 		.ascii	"CapSense_1_BaseInit\000"
 2432      656E7365 
 2432      5F315F42 
 2432      61736549 
 2432      6E697400 
 2433              	.LASF7:
 2434 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2434      206C6F6E 
 2434      6720756E 
 2434      7369676E 
 2434      65642069 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 79


 2435              	.LASF34:
 2436 0074 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 2436      656E7365 
 2436      5F315F45 
 2436      6E61626C 
 2436      65576964 
 2437              	.LASF29:
 2438 008c 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 2438      656E7365 
 2438      5F315F43 
 2438      6865636B 
 2438      49735769 
 2439              	.LASF53:
 2440 00ab 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 2440      656E7365 
 2440      5F315F6E 
 2440      6F697365 
 2440      54687265 
 2441              	.LASF55:
 2442 00c5 43617053 		.ascii	"CapSense_1_debounce\000"
 2442      656E7365 
 2442      5F315F64 
 2442      65626F75 
 2442      6E636500 
 2443              	.LASF43:
 2444 00d9 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 2444      656E7365 
 2444      5F315F73 
 2444      656E736F 
 2444      72526177 
 2445              	.LASF6:
 2446 00ee 6C6F6E67 		.ascii	"long long int\000"
 2446      206C6F6E 
 2446      6720696E 
 2446      7400
 2447              	.LASF0:
 2448 00fc 7369676E 		.ascii	"signed char\000"
 2448      65642063 
 2448      68617200 
 2449              	.LASF30:
 2450 0108 72617749 		.ascii	"rawIndex\000"
 2450      6E646578 
 2450      00
 2451              	.LASF31:
 2452 0111 6E756D62 		.ascii	"numberOfSensors\000"
 2452      65724F66 
 2452      53656E73 
 2452      6F727300 
 2453              	.LASF32:
 2454 0121 73746174 		.ascii	"state\000"
 2454      6500
 2455              	.LASF4:
 2456 0127 6C6F6E67 		.ascii	"long int\000"
 2456      20696E74 
 2456      00
 2457              	.LASF35:
 2458 0130 43617053 		.ascii	"CapSense_1_DisableWidget\000"
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 80


 2458      656E7365 
 2458      5F315F44 
 2458      69736162 
 2458      6C655769 
 2459              	.LASF9:
 2460 0149 75696E74 		.ascii	"uint8\000"
 2460      3800
 2461              	.LASF13:
 2462 014f 646F7562 		.ascii	"double\000"
 2462      6C6500
 2463              	.LASF60:
 2464 0156 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 2464      6E657261 
 2464      7465645F 
 2464      536F7572 
 2464      63655C50 
 2465              	.LASF11:
 2466 0181 75696E74 		.ascii	"uint32\000"
 2466      333200
 2467              	.LASF26:
 2468 0188 68797374 		.ascii	"hysteresis\000"
 2468      65726573 
 2468      697300
 2469              	.LASF62:
 2470 0193 43617053 		.ascii	"CapSense_1_ScanSensor\000"
 2470      656E7365 
 2470      5F315F53 
 2470      63616E53 
 2470      656E736F 
 2471              	.LASF54:
 2472 01a9 43617053 		.ascii	"CapSense_1_hysteresis\000"
 2472      656E7365 
 2472      5F315F68 
 2472      79737465 
 2472      72657369 
 2473              	.LASF57:
 2474 01bf 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 2474      656E7365 
 2474      5F315F72 
 2474      61774461 
 2474      7461496E 
 2475              	.LASF52:
 2476 01d7 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 2476      656E7365 
 2476      5F315F66 
 2476      696E6765 
 2476      72546872 
 2477              	.LASF8:
 2478 01f2 756E7369 		.ascii	"unsigned int\000"
 2478      676E6564 
 2478      20696E74 
 2478      00
 2479              	.LASF64:
 2480 01ff 43617053 		.ascii	"CapSense_1_ScanEnabledWidgets\000"
 2480      656E7365 
 2480      5F315F53 
 2480      63616E45 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 81


 2480      6E61626C 
 2481              	.LASF5:
 2482 021d 6C6F6E67 		.ascii	"long unsigned int\000"
 2482      20756E73 
 2482      69676E65 
 2482      6420696E 
 2482      7400
 2483              	.LASF3:
 2484 022f 73686F72 		.ascii	"short unsigned int\000"
 2484      7420756E 
 2484      7369676E 
 2484      65642069 
 2484      6E7400
 2485              	.LASF61:
 2486 0242 443A5C55 		.ascii	"D:\\Utilisateurs\\user\\Documents\\PSoC Creator\\Wo"
 2486      74696C69 
 2486      73617465 
 2486      7572735C 
 2486      75736572 
 2487 0270 726B7370 		.ascii	"rkspace02\\Capsense.cydsn\000"
 2487      61636530 
 2487      325C4361 
 2487      7073656E 
 2487      73652E63 
 2488              	.LASF18:
 2489 0289 73656E73 		.ascii	"sensor\000"
 2489      6F7200
 2490              	.LASF58:
 2491 0290 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 2491      656E7365 
 2491      5F315F6E 
 2491      756D6265 
 2491      724F6653 
 2492              	.LASF38:
 2493 02ab 63616C63 		.ascii	"calc\000"
 2493      00
 2494              	.LASF45:
 2495 02b0 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 2495      656E7365 
 2495      5F315F73 
 2495      656E736F 
 2495      72456E61 
 2496              	.LASF27:
 2497 02cc 6465626F 		.ascii	"debounce\000"
 2497      756E6365 
 2497      00
 2498              	.LASF22:
 2499 02d5 656E4D61 		.ascii	"enMask\000"
 2499      736B00
 2500              	.LASF15:
 2501 02dc 73697A65 		.ascii	"sizetype\000"
 2501      74797065 
 2501      00
 2502              	.LASF51:
 2503 02e5 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 2503      656E7365 
 2503      5F315F6C 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 82


 2503      6F774261 
 2503      73656C69 
 2504              	.LASF46:
 2505 0304 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 2505      656E7365 
 2505      5F315F77 
 2505      69646765 
 2505      744E756D 
 2506              	.LASF17:
 2507 031c 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 2507      656E7365 
 2507      5F315F49 
 2507      6E697469 
 2507      616C697A 
 2508              	.LASF42:
 2509 0340 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 2509      656E7365 
 2509      5F315F55 
 2509      70646174 
 2509      65456E61 
 2510              	.LASF12:
 2511 0362 666C6F61 		.ascii	"float\000"
 2511      7400
 2512              	.LASF50:
 2513 0368 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 2513      656E7365 
 2513      5F315F73 
 2513      656E736F 
 2513      724F6E4D 
 2514              	.LASF44:
 2515 0380 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 2515      656E7365 
 2515      5F315F72 
 2515      61774669 
 2515      6C746572 
 2516              	.LASF28:
 2517 039a 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 2517      656E7365 
 2517      5F315F43 
 2517      6865636B 
 2517      49735365 
 2518              	.LASF33:
 2519 03b9 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 2519      656E7365 
 2519      5F315F43 
 2519      6865636B 
 2519      4973416E 
 2520              	.LASF1:
 2521 03db 756E7369 		.ascii	"unsigned char\000"
 2521      676E6564 
 2521      20636861 
 2521      7200
 2522              	.LASF21:
 2523 03e9 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 2523      656E7365 
 2523      5F315F49 
 2523      6E697469 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 83


 2523      616C697A 
 2524              	.LASF41:
 2525 040f 6E6F6973 		.ascii	"noiseThreshold\000"
 2525      65546872 
 2525      6573686F 
 2525      6C6400
 2526              	.LASF2:
 2527 041e 73686F72 		.ascii	"short int\000"
 2527      7420696E 
 2527      7400
 2528              	.LASF20:
 2529 0428 77696467 		.ascii	"widget\000"
 2529      657400
 2530              	.LASF24:
 2531 042f 6F6E4D61 		.ascii	"onMask\000"
 2531      736B00
 2532              	.LASF37:
 2533 0436 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 2533      656E7365 
 2533      5F315F55 
 2533      70646174 
 2533      6553656E 
 2534              	.LASF49:
 2535 0456 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 2535      656E7365 
 2535      5F315F73 
 2535      656E736F 
 2535      72536967 
 2536              	.LASF56:
 2537 046e 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 2537      656E7365 
 2537      5F315F64 
 2537      65626F75 
 2537      6E636543 
 2538              	.LASF14:
 2539 0489 63686172 		.ascii	"char\000"
 2539      00
 2540              	.LASF63:
 2541 048e 43617053 		.ascii	"CapSense_1_IsBusy\000"
 2541      656E7365 
 2541      5F315F49 
 2541      73427573 
 2541      7900
 2542              	.LASF48:
 2543 04a0 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 2543      656E7365 
 2543      5F315F73 
 2543      656E736F 
 2543      72426173 
 2544              	.LASF23:
 2545 04bd 6465626F 		.ascii	"debounceIndex\000"
 2545      756E6365 
 2545      496E6465 
 2545      7800
 2546              	.LASF59:
 2547 04cb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2547      4320342E 
ARM GAS  C:\Users\user\AppData\Local\Temp\ccxeGpeX.s 			page 84


 2547      392E3320 
 2547      32303135 
 2547      30333033 
 2548 04fe 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2548      20726576 
 2548      6973696F 
 2548      6E203232 
 2548      31323230 
 2549 0531 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2549      66756E63 
 2549      74696F6E 
 2549      2D736563 
 2549      74696F6E 
 2550              	.LASF47:
 2551 0559 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 2551      656E7365 
 2551      5F315F73 
 2551      656E736F 
 2551      72426173 
 2552              	.LASF36:
 2553 0573 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 2553      656E7365 
 2553      5F315F49 
 2553      49523446 
 2553      696C7465 
 2554              	.LASF39:
 2555 0589 74656D70 		.ascii	"tempRaw\000"
 2555      52617700 
 2556              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
