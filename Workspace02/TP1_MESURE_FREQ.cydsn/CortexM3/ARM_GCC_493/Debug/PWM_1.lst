ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_1_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	PWM_1_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_1_Enable, %function
  24              	PWM_1_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** 
  26:.\Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC5/PWM_1.c **** 
  34:.\Generated_Source\PSoC5/PWM_1.c **** 
  35:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC5/PWM_1.c **** *
  44:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC5/PWM_1.c **** *
  47:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC5/PWM_1.c **** *
  50:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC5/PWM_1.c **** *
  54:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC5/PWM_1.c **** {
  57:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:.\Generated_Source\PSoC5/PWM_1.c ****     {
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  61:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  62:.\Generated_Source\PSoC5/PWM_1.c ****     }
  63:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  64:.\Generated_Source\PSoC5/PWM_1.c **** 
  65:.\Generated_Source\PSoC5/PWM_1.c **** }
  66:.\Generated_Source\PSoC5/PWM_1.c **** 
  67:.\Generated_Source\PSoC5/PWM_1.c **** 
  68:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC5/PWM_1.c **** *
  77:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC5/PWM_1.c **** *
  80:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC5/PWM_1.c **** *
  83:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC5/PWM_1.c **** {
  86:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_1.c **** 
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC5/PWM_1.c **** 
  97:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC5/PWM_1.c **** 
 104:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC5/PWM_1.c **** 
 107:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC5/PWM_1.c **** 
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC5/PWM_1.c **** 
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC5/PWM_1.c **** 
 123:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC5/PWM_1.c **** 
 133:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC5/PWM_1.c **** 
 136:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC5/PWM_1.c **** 
 138:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC5/PWM_1.c **** 
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC5/PWM_1.c **** 
 149:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC5/PWM_1.c **** 
 153:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC5/PWM_1.c **** 
 157:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC5/PWM_1.c **** 
 165:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC5/PWM_1.c **** 
 171:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC5/PWM_1.c **** 
 174:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC5/PWM_1.c **** }
 180:.\Generated_Source\PSoC5/PWM_1.c **** 
 181:.\Generated_Source\PSoC5/PWM_1.c **** 
 182:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC5/PWM_1.c **** *
 195:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC5/PWM_1.c **** *
 198:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC5/PWM_1.c **** {
  27              		.loc 1 200 0
  28              		.cfi_startproc
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 5


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  32              		.loc 1 209 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
  39              		.align	2
  40              	.L2:
  41 000c 7F640040 		.word	1073767551
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	PWM_1_Enable, .-PWM_1_Enable
  45              		.section	.text.PWM_1_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	PWM_1_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	PWM_1_Stop, %function
  51              	PWM_1_Stop:
  52              	.LFB3:
 210:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC5/PWM_1.c **** }
 212:.\Generated_Source\PSoC5/PWM_1.c **** 
 213:.\Generated_Source\PSoC5/PWM_1.c **** 
 214:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC5/PWM_1.c **** *
 218:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC5/PWM_1.c **** *
 225:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC5/PWM_1.c **** *
 228:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC5/PWM_1.c **** *
 232:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 6


 234:.\Generated_Source\PSoC5/PWM_1.c **** {
  53              		.loc 1 234 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 235:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  58              		.loc 1 236 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 7F640040 		.word	1073767551
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	PWM_1_Stop, .-PWM_1_Stop
  71              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  72              		.align	2
  73              		.global	PWM_1_WriteCounter
  74              		.thumb
  75              		.thumb_func
  76              		.type	PWM_1_WriteCounter, %function
  77              	PWM_1_WriteCounter:
  78              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_1.c **** 
 239:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC5/PWM_1.c **** }
 245:.\Generated_Source\PSoC5/PWM_1.c **** 
 246:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC5/PWM_1.c **** 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 
 250:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC5/PWM_1.c ****         *
 254:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC5/PWM_1.c ****         *
 258:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC5/PWM_1.c ****         *
 262:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 7


 265:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC5/PWM_1.c ****         {
 268:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC5/PWM_1.c **** 
 270:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC5/PWM_1.c **** 
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC5/PWM_1.c **** 
 279:.\Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC5/PWM_1.c **** 
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC5/PWM_1.c **** 
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC5/PWM_1.c **** 
 295:.\Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC5/PWM_1.c ****         }
 304:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC5/PWM_1.c **** 
 306:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC5/PWM_1.c **** 
 308:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC5/PWM_1.c **** 
 310:.\Generated_Source\PSoC5/PWM_1.c **** 
 311:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC5/PWM_1.c ****         *
 315:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC5/PWM_1.c ****         *
 318:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC5/PWM_1.c ****         *
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 8


 322:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC5/PWM_1.c ****         *
 325:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC5/PWM_1.c ****         {
 328:.\Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC5/PWM_1.c **** 
 335:.\Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC5/PWM_1.c ****         }
 340:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC5/PWM_1.c **** 
 342:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC5/PWM_1.c **** 
 344:.\Generated_Source\PSoC5/PWM_1.c **** 
 345:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *
 349:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *
 352:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC5/PWM_1.c ****     *
 356:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC5/PWM_1.c ****     *
 359:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC5/PWM_1.c ****     {
 362:.\Generated_Source\PSoC5/PWM_1.c **** 
 363:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC5/PWM_1.c **** 
 370:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC5/PWM_1.c ****     }
 375:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 9


 379:.\Generated_Source\PSoC5/PWM_1.c **** 
 380:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC5/PWM_1.c **** 
 382:.\Generated_Source\PSoC5/PWM_1.c **** 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC5/PWM_1.c ****     *
 399:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC5/PWM_1.c ****     *
 402:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC5/PWM_1.c ****     {
  79              		.loc 1 405 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 406:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1880     		strh	r0, [r3]	@ movhi
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 1C680040 		.word	1073768476
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  96              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  97              		.align	2
  98              		.global	PWM_1_ReadCounter
  99              		.thumb
 100              		.thumb_func
 101              		.type	PWM_1_ReadCounter, %function
 102              	PWM_1_ReadCounter:
 103              	.LFB5:
 407:.\Generated_Source\PSoC5/PWM_1.c ****     }
 408:.\Generated_Source\PSoC5/PWM_1.c **** 
 409:.\Generated_Source\PSoC5/PWM_1.c **** 
 410:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 10


 411:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *
 414:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC5/PWM_1.c ****     *
 421:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC5/PWM_1.c ****     *
 424:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC5/PWM_1.c ****     {
 104              		.loc 1 426 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 427:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 109              		.loc 1 430 0
 110 0000 024B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 112              		.loc 1 433 0
 113 0004 024B     		ldr	r3, .L11+4
 114 0006 1888     		ldrh	r0, [r3]
 434:.\Generated_Source\PSoC5/PWM_1.c ****     }
 115              		.loc 1 434 0
 116 0008 80B2     		uxth	r0, r0
 117 000a 7047     		bx	lr
 118              	.L12:
 119              		.align	2
 120              	.L11:
 121 000c 1E640040 		.word	1073767454
 122 0010 BC680040 		.word	1073768636
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 126              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 127              		.align	2
 128              		.global	PWM_1_WritePeriod
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_1_WritePeriod, %function
 132              	PWM_1_WritePeriod:
 133              	.LFB7:
 435:.\Generated_Source\PSoC5/PWM_1.c **** 
 436:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 11


 438:.\Generated_Source\PSoC5/PWM_1.c **** 
 439:.\Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC5/PWM_1.c ****         *
 443:.\Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC5/PWM_1.c ****         *
 446:.\Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC5/PWM_1.c ****         *
 449:.\Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC5/PWM_1.c ****         *
 452:.\Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC5/PWM_1.c ****         {
 455:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC5/PWM_1.c ****             {
 457:.\Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC5/PWM_1.c ****             }
 459:.\Generated_Source\PSoC5/PWM_1.c ****         }
 460:.\Generated_Source\PSoC5/PWM_1.c **** 
 461:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC5/PWM_1.c **** 
 463:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC5/PWM_1.c **** 
 465:.\Generated_Source\PSoC5/PWM_1.c **** 
 466:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/PWM_1.c **** *
 470:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC5/PWM_1.c **** *
 474:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC5/PWM_1.c **** *
 478:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC5/PWM_1.c **** *
 481:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC5/PWM_1.c **** {
 134              		.loc 1 483 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LVL1:
 484:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 140              		.loc 1 487 0
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 12


 141 0000 014B     		ldr	r3, .L14
 142 0002 1880     		strh	r0, [r3]	@ movhi
 143 0004 7047     		bx	lr
 144              	.L15:
 145 0006 00BF     		.align	2
 146              	.L14:
 147 0008 9C680040 		.word	1073768604
 148              		.cfi_endproc
 149              	.LFE7:
 150              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 151              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_1_WriteCompare
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_1_WriteCompare, %function
 157              	PWM_1_WriteCompare:
 158              	.LFB8:
 488:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC5/PWM_1.c **** }
 490:.\Generated_Source\PSoC5/PWM_1.c **** 
 491:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC5/PWM_1.c **** 
 493:.\Generated_Source\PSoC5/PWM_1.c **** 
 494:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC5/PWM_1.c ****     *
 498:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC5/PWM_1.c ****     *
 508:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC5/PWM_1.c ****     *
 511:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC5/PWM_1.c ****     *
 515:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC5/PWM_1.c ****     {
 159              		.loc 1 518 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164              	.LVL2:
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 13


 521:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 165              		.loc 1 522 0
 166 0000 014B     		ldr	r3, .L17
 167 0002 1880     		strh	r0, [r3]	@ movhi
 168 0004 7047     		bx	lr
 169              	.L18:
 170 0006 00BF     		.align	2
 171              	.L17:
 172 0008 5C680040 		.word	1073768540
 173              		.cfi_endproc
 174              	.LFE8:
 175              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 176              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 177              		.align	2
 178              		.global	PWM_1_SetInterruptMode
 179              		.thumb
 180              		.thumb_func
 181              		.type	PWM_1_SetInterruptMode, %function
 182              	PWM_1_SetInterruptMode:
 183              	.LFB9:
 523:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC5/PWM_1.c **** 
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC5/PWM_1.c ****     }
 533:.\Generated_Source\PSoC5/PWM_1.c **** 
 534:.\Generated_Source\PSoC5/PWM_1.c **** 
 535:.\Generated_Source\PSoC5/PWM_1.c **** #else
 536:.\Generated_Source\PSoC5/PWM_1.c **** 
 537:.\Generated_Source\PSoC5/PWM_1.c **** 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC5/PWM_1.c ****     *
 551:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC5/PWM_1.c ****     *
 554:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC5/PWM_1.c ****     {
 558:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 14


 559:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC5/PWM_1.c ****     }
 564:.\Generated_Source\PSoC5/PWM_1.c **** 
 565:.\Generated_Source\PSoC5/PWM_1.c **** 
 566:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *
 570:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC5/PWM_1.c ****     *
 580:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC5/PWM_1.c ****     *
 583:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC5/PWM_1.c ****     {
 587:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC5/PWM_1.c ****     }
 593:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC5/PWM_1.c **** 
 595:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC5/PWM_1.c **** 
 597:.\Generated_Source\PSoC5/PWM_1.c **** 
 598:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC5/PWM_1.c ****     *
 608:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC5/PWM_1.c ****     *
 611:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC5/PWM_1.c ****     {
 614:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 15


 616:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC5/PWM_1.c **** 
 622:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC5/PWM_1.c **** 
 630:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC5/PWM_1.c ****     }
 632:.\Generated_Source\PSoC5/PWM_1.c **** 
 633:.\Generated_Source\PSoC5/PWM_1.c **** 
 634:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC5/PWM_1.c ****     *
 644:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC5/PWM_1.c ****     *
 647:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC5/PWM_1.c ****     {
 650:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC5/PWM_1.c **** 
 655:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC5/PWM_1.c ****     }
 664:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC5/PWM_1.c **** 
 666:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC5/PWM_1.c **** 
 668:.\Generated_Source\PSoC5/PWM_1.c **** 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 16


 673:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC5/PWM_1.c ****     *
 680:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC5/PWM_1.c ****     *
 683:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC5/PWM_1.c ****     {
 184              		.loc 1 685 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL3:
 686:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 190              		.loc 1 686 0
 191 0000 014B     		ldr	r3, .L20
 192 0002 1870     		strb	r0, [r3]
 193 0004 7047     		bx	lr
 194              	.L21:
 195 0006 00BF     		.align	2
 196              	.L20:
 197 0008 8F640040 		.word	1073767567
 198              		.cfi_endproc
 199              	.LFE9:
 200              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 201              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 202              		.align	2
 203              		.global	PWM_1_ReadStatusRegister
 204              		.thumb
 205              		.thumb_func
 206              		.type	PWM_1_ReadStatusRegister, %function
 207              	PWM_1_ReadStatusRegister:
 208              	.LFB10:
 687:.\Generated_Source\PSoC5/PWM_1.c ****     }
 688:.\Generated_Source\PSoC5/PWM_1.c **** 
 689:.\Generated_Source\PSoC5/PWM_1.c **** 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC5/PWM_1.c ****     *
 697:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *
 700:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 17


 705:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC5/PWM_1.c ****     *
 710:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC5/PWM_1.c ****     {
 209              		.loc 1 712 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 713:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 214              		.loc 1 713 0
 215 0000 014B     		ldr	r3, .L23
 216 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:.\Generated_Source\PSoC5/PWM_1.c ****     }
 217              		.loc 1 714 0
 218 0004 7047     		bx	lr
 219              	.L24:
 220 0006 00BF     		.align	2
 221              	.L23:
 222 0008 6F640040 		.word	1073767535
 223              		.cfi_endproc
 224              	.LFE10:
 225              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 226              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 227              		.align	2
 228              		.global	PWM_1_ReadControlRegister
 229              		.thumb
 230              		.thumb_func
 231              		.type	PWM_1_ReadControlRegister, %function
 232              	PWM_1_ReadControlRegister:
 233              	.LFB11:
 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC5/PWM_1.c **** 
 721:.\Generated_Source\PSoC5/PWM_1.c **** 
 722:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC5/PWM_1.c ****     *
 726:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC5/PWM_1.c ****     *
 736:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 18


 737:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC5/PWM_1.c ****     {
 234              		.loc 1 738 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 739:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC5/PWM_1.c **** 
 741:.\Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 239              		.loc 1 741 0
 240 0000 014B     		ldr	r3, .L26
 241 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 242              	.LVL4:
 742:.\Generated_Source\PSoC5/PWM_1.c ****         return (result);
 743:.\Generated_Source\PSoC5/PWM_1.c ****     }
 243              		.loc 1 743 0
 244 0004 7047     		bx	lr
 245              	.L27:
 246 0006 00BF     		.align	2
 247              	.L26:
 248 0008 7F640040 		.word	1073767551
 249              		.cfi_endproc
 250              	.LFE11:
 251              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 252              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 253              		.align	2
 254              		.global	PWM_1_WriteControlRegister
 255              		.thumb
 256              		.thumb_func
 257              		.type	PWM_1_WriteControlRegister, %function
 258              	PWM_1_WriteControlRegister:
 259              	.LFB12:
 744:.\Generated_Source\PSoC5/PWM_1.c **** 
 745:.\Generated_Source\PSoC5/PWM_1.c **** 
 746:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *
 750:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *
 754:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC5/PWM_1.c ****     *
 764:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC5/PWM_1.c ****     {
 260              		.loc 1 766 0
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 19


 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL5:
 767:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 266              		.loc 1 767 0
 267 0000 014B     		ldr	r3, .L29
 268 0002 1870     		strb	r0, [r3]
 269 0004 7047     		bx	lr
 270              	.L30:
 271 0006 00BF     		.align	2
 272              	.L29:
 273 0008 7F640040 		.word	1073767551
 274              		.cfi_endproc
 275              	.LFE12:
 276              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 277              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 278              		.align	2
 279              		.global	PWM_1_ReadCapture
 280              		.thumb
 281              		.thumb_func
 282              		.type	PWM_1_ReadCapture, %function
 283              	PWM_1_ReadCapture:
 284              	.LFB13:
 768:.\Generated_Source\PSoC5/PWM_1.c ****     }
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC5/PWM_1.c **** 
 775:.\Generated_Source\PSoC5/PWM_1.c **** 
 776:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC5/PWM_1.c ****     *
 789:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC5/PWM_1.c ****     {
 285              		.loc 1 791 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 792:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 290              		.loc 1 792 0
 291 0000 014B     		ldr	r3, .L32
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 20


 292 0002 1888     		ldrh	r0, [r3]
 793:.\Generated_Source\PSoC5/PWM_1.c ****     }
 293              		.loc 1 793 0
 294 0004 80B2     		uxth	r0, r0
 295 0006 7047     		bx	lr
 296              	.L33:
 297              		.align	2
 298              	.L32:
 299 0008 BC680040 		.word	1073768636
 300              		.cfi_endproc
 301              	.LFE13:
 302              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 303              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 304              		.align	2
 305              		.global	PWM_1_ClearFIFO
 306              		.thumb
 307              		.thumb_func
 308              		.type	PWM_1_ClearFIFO, %function
 309              	PWM_1_ClearFIFO:
 310              	.LFB6:
 454:.\Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 311              		.loc 1 454 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315 0000 08B5     		push	{r3, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC5/PWM_1.c ****             {
 319              		.loc 1 455 0
 320 0002 01E0     		b	.L35
 321              	.L36:
 457:.\Generated_Source\PSoC5/PWM_1.c ****             }
 322              		.loc 1 457 0
 323 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 324              	.LVL6:
 325              	.L35:
 455:.\Generated_Source\PSoC5/PWM_1.c ****             {
 326              		.loc 1 455 0
 327 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 328              	.LVL7:
 329 000c 10F0100F 		tst	r0, #16
 330 0010 F8D1     		bne	.L36
 459:.\Generated_Source\PSoC5/PWM_1.c **** 
 331              		.loc 1 459 0
 332 0012 08BD     		pop	{r3, pc}
 333              		.cfi_endproc
 334              	.LFE6:
 335              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 336              		.section	.text.PWM_1_Init,"ax",%progbits
 337              		.align	2
 338              		.global	PWM_1_Init
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_1_Init, %function
 342              	PWM_1_Init:
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 21


 343              	.LFB1:
  85:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
 344              		.loc 1 85 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 352              		.loc 1 117 0
 353 0002 154A     		ldr	r2, .L40
 354 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 355 0006 03F0C003 		and	r3, r3, #192
 356              	.LVL8:
 119:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 357              		.loc 1 119 0
 358 000a 43F00903 		orr	r3, r3, #9
 359              	.LVL9:
 360 000e 1370     		strb	r3, [r2]
 129:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 361              		.loc 1 129 0
 362 0010 1F32     		adds	r2, r2, #31
 363 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 364 0014 43F00103 		orr	r3, r3, #1
 365 0018 1370     		strb	r3, [r2]
 130:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 366              		.loc 1 130 0
 367 001a 104C     		ldr	r4, .L40+4
 368 001c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 369 001e 43F00103 		orr	r3, r3, #1
 370 0022 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 371              		.loc 1 133 0
 372 0024 4EF66020 		movw	r0, #60000
 373 0028 FFF7FEFF 		bl	PWM_1_WriteCounter
 374              	.LVL10:
 136:.\Generated_Source\PSoC5/PWM_1.c **** 
 375              		.loc 1 136 0
 376 002c 4EF66020 		movw	r0, #60000
 377 0030 FFF7FEFF 		bl	PWM_1_WritePeriod
 378              	.LVL11:
 139:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 379              		.loc 1 139 0
 380 0034 47F23050 		movw	r0, #30000
 381 0038 FFF7FEFF 		bl	PWM_1_WriteCompare
 382              	.LVL12:
 154:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 383              		.loc 1 154 0
 384 003c 0420     		movs	r0, #4
 385 003e FFF7FEFF 		bl	PWM_1_SetInterruptMode
 386              	.LVL13:
 167:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 387              		.loc 1 167 0
 388 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 389              	.LVL14:
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 22


 169:.\Generated_Source\PSoC5/PWM_1.c **** 
 390              		.loc 1 169 0
 391 0046 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 392 0048 43F01003 		orr	r3, r3, #16
 393 004c 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC5/PWM_1.c **** 
 394              		.loc 1 172 0
 395 004e FFF7FEFF 		bl	CyExitCriticalSection
 396              	.LVL15:
 176:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 397              		.loc 1 176 0
 398 0052 FFF7FEFF 		bl	PWM_1_ClearFIFO
 399              	.LVL16:
 400 0056 10BD     		pop	{r4, pc}
 401              	.L41:
 402              		.align	2
 403              	.L40:
 404 0058 7F640040 		.word	1073767551
 405 005c 9F640040 		.word	1073767583
 406              		.cfi_endproc
 407              	.LFE1:
 408              		.size	PWM_1_Init, .-PWM_1_Init
 409              		.section	.text.PWM_1_Start,"ax",%progbits
 410              		.align	2
 411              		.global	PWM_1_Start
 412              		.thumb
 413              		.thumb_func
 414              		.type	PWM_1_Start, %function
 415              	PWM_1_Start:
 416              	.LFB0:
  56:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
 417              		.loc 1 56 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421 0000 08B5     		push	{r3, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC5/PWM_1.c ****     {
 425              		.loc 1 58 0
 426 0002 054B     		ldr	r3, .L45
 427 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 428 0006 23B9     		cbnz	r3, .L43
  60:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
 429              		.loc 1 60 0
 430 0008 FFF7FEFF 		bl	PWM_1_Init
 431              	.LVL17:
  61:.\Generated_Source\PSoC5/PWM_1.c ****     }
 432              		.loc 1 61 0
 433 000c 0122     		movs	r2, #1
 434 000e 024B     		ldr	r3, .L45
 435 0010 1A70     		strb	r2, [r3]
 436              	.L43:
  63:.\Generated_Source\PSoC5/PWM_1.c **** 
 437              		.loc 1 63 0
 438 0012 FFF7FEFF 		bl	PWM_1_Enable
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 23


 439              	.LVL18:
 440 0016 08BD     		pop	{r3, pc}
 441              	.L46:
 442              		.align	2
 443              	.L45:
 444 0018 00000000 		.word	.LANCHOR0
 445              		.cfi_endproc
 446              	.LFE0:
 447              		.size	PWM_1_Start, .-PWM_1_Start
 448              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 449              		.align	2
 450              		.global	PWM_1_ReadCompare
 451              		.thumb
 452              		.thumb_func
 453              		.type	PWM_1_ReadCompare, %function
 454              	PWM_1_ReadCompare:
 455              	.LFB14:
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC5/PWM_1.c **** 
 800:.\Generated_Source\PSoC5/PWM_1.c **** 
 801:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *
 805:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
 812:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC5/PWM_1.c ****     *
 815:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC5/PWM_1.c ****     {
 456              		.loc 1 817 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 818:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 461              		.loc 1 821 0
 462 0000 014B     		ldr	r3, .L48
 463 0002 1888     		ldrh	r0, [r3]
 822:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC5/PWM_1.c ****     }
 464              		.loc 1 823 0
 465 0004 80B2     		uxth	r0, r0
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 24


 466 0006 7047     		bx	lr
 467              	.L49:
 468              		.align	2
 469              	.L48:
 470 0008 5C680040 		.word	1073768540
 471              		.cfi_endproc
 472              	.LFE14:
 473              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 474              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 475              		.align	2
 476              		.global	PWM_1_ReadPeriod
 477              		.thumb
 478              		.thumb_func
 479              		.type	PWM_1_ReadPeriod, %function
 480              	PWM_1_ReadPeriod:
 481              	.LFB15:
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c **** #else
 826:.\Generated_Source\PSoC5/PWM_1.c **** 
 827:.\Generated_Source\PSoC5/PWM_1.c **** 
 828:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC5/PWM_1.c ****     *
 841:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC5/PWM_1.c ****     {
 844:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC5/PWM_1.c ****     }
 846:.\Generated_Source\PSoC5/PWM_1.c **** 
 847:.\Generated_Source\PSoC5/PWM_1.c **** 
 848:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC5/PWM_1.c ****     *
 861:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC5/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC5/PWM_1.c ****     {
 864:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 25


 865:.\Generated_Source\PSoC5/PWM_1.c ****     }
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC5/PWM_1.c **** 
 869:.\Generated_Source\PSoC5/PWM_1.c **** 
 870:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC5/PWM_1.c **** *
 883:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC5/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC5/PWM_1.c **** {
 482              		.loc 1 885 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		@ link register save eliminated.
 886:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 487              		.loc 1 889 0
 488 0000 014B     		ldr	r3, .L51
 489 0002 1888     		ldrh	r0, [r3]
 890:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC5/PWM_1.c **** }
 490              		.loc 1 891 0
 491 0004 80B2     		uxth	r0, r0
 492 0006 7047     		bx	lr
 493              	.L52:
 494              		.align	2
 495              	.L51:
 496 0008 9C680040 		.word	1073768604
 497              		.cfi_endproc
 498              	.LFE15:
 499              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 500              		.global	PWM_1_initVar
 501              		.bss
 502              		.set	.LANCHOR0,. + 0
 503              		.type	PWM_1_initVar, %object
 504              		.size	PWM_1_initVar, 1
 505              	PWM_1_initVar:
 506 0000 00       		.space	1
 507              		.text
 508              	.Letext0:
 509              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 510              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 511              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 26


 512              	.Ldebug_info0:
 513 0000 4B030000 		.4byte	0x34b
 514 0004 0400     		.2byte	0x4
 515 0006 00000000 		.4byte	.Ldebug_abbrev0
 516 000a 04       		.byte	0x4
 517 000b 01       		.uleb128 0x1
 518 000c 8F010000 		.4byte	.LASF40
 519 0010 01       		.byte	0x1
 520 0011 6B000000 		.4byte	.LASF41
 521 0015 06030000 		.4byte	.LASF42
 522 0019 00000000 		.4byte	.Ldebug_ranges0+0
 523 001d 00000000 		.4byte	0
 524 0021 00000000 		.4byte	.Ldebug_line0
 525 0025 02       		.uleb128 0x2
 526 0026 01       		.byte	0x1
 527 0027 06       		.byte	0x6
 528 0028 F2020000 		.4byte	.LASF0
 529 002c 02       		.uleb128 0x2
 530 002d 01       		.byte	0x1
 531 002e 08       		.byte	0x8
 532 002f CA000000 		.4byte	.LASF1
 533 0033 02       		.uleb128 0x2
 534 0034 02       		.byte	0x2
 535 0035 05       		.byte	0x5
 536 0036 61010000 		.4byte	.LASF2
 537 003a 02       		.uleb128 0x2
 538 003b 02       		.byte	0x2
 539 003c 07       		.byte	0x7
 540 003d 58000000 		.4byte	.LASF3
 541 0041 02       		.uleb128 0x2
 542 0042 04       		.byte	0x4
 543 0043 05       		.byte	0x5
 544 0044 E4020000 		.4byte	.LASF4
 545 0048 02       		.uleb128 0x2
 546 0049 04       		.byte	0x4
 547 004a 07       		.byte	0x7
 548 004b EE000000 		.4byte	.LASF5
 549 004f 02       		.uleb128 0x2
 550 0050 08       		.byte	0x8
 551 0051 05       		.byte	0x5
 552 0052 7F020000 		.4byte	.LASF6
 553 0056 02       		.uleb128 0x2
 554 0057 08       		.byte	0x8
 555 0058 07       		.byte	0x7
 556 0059 B3000000 		.4byte	.LASF7
 557 005d 03       		.uleb128 0x3
 558 005e 04       		.byte	0x4
 559 005f 05       		.byte	0x5
 560 0060 696E7400 		.ascii	"int\000"
 561 0064 02       		.uleb128 0x2
 562 0065 04       		.byte	0x4
 563 0066 07       		.byte	0x7
 564 0067 34020000 		.4byte	.LASF8
 565 006b 04       		.uleb128 0x4
 566 006c 00010000 		.4byte	.LASF9
 567 0070 02       		.byte	0x2
 568 0071 3801     		.2byte	0x138
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 27


 569 0073 2C000000 		.4byte	0x2c
 570 0077 04       		.uleb128 0x4
 571 0078 7D010000 		.4byte	.LASF10
 572 007c 02       		.byte	0x2
 573 007d 3901     		.2byte	0x139
 574 007f 3A000000 		.4byte	0x3a
 575 0083 02       		.uleb128 0x2
 576 0084 04       		.byte	0x4
 577 0085 04       		.byte	0x4
 578 0086 A5000000 		.4byte	.LASF11
 579 008a 02       		.uleb128 0x2
 580 008b 08       		.byte	0x8
 581 008c 04       		.byte	0x4
 582 008d 37010000 		.4byte	.LASF12
 583 0091 02       		.uleb128 0x2
 584 0092 01       		.byte	0x1
 585 0093 08       		.byte	0x8
 586 0094 ED020000 		.4byte	.LASF13
 587 0098 04       		.uleb128 0x4
 588 0099 D8000000 		.4byte	.LASF14
 589 009d 02       		.byte	0x2
 590 009e E201     		.2byte	0x1e2
 591 00a0 A4000000 		.4byte	0xa4
 592 00a4 05       		.uleb128 0x5
 593 00a5 6B000000 		.4byte	0x6b
 594 00a9 04       		.uleb128 0x4
 595 00aa 00000000 		.4byte	.LASF15
 596 00ae 02       		.byte	0x2
 597 00af E301     		.2byte	0x1e3
 598 00b1 B5000000 		.4byte	0xb5
 599 00b5 05       		.uleb128 0x5
 600 00b6 77000000 		.4byte	0x77
 601 00ba 02       		.uleb128 0x2
 602 00bb 04       		.byte	0x4
 603 00bc 07       		.byte	0x7
 604 00bd 63020000 		.4byte	.LASF16
 605 00c1 06       		.uleb128 0x6
 606 00c2 06000000 		.4byte	.LASF17
 607 00c6 01       		.byte	0x1
 608 00c7 C7       		.byte	0xc7
 609 00c8 00000000 		.4byte	.LFB2
 610 00cc 10000000 		.4byte	.LFE2-.LFB2
 611 00d0 01       		.uleb128 0x1
 612 00d1 9C       		.byte	0x9c
 613 00d2 06       		.uleb128 0x6
 614 00d3 D9020000 		.4byte	.LASF18
 615 00d7 01       		.byte	0x1
 616 00d8 E9       		.byte	0xe9
 617 00d9 00000000 		.4byte	.LFB3
 618 00dd 10000000 		.4byte	.LFE3-.LFB3
 619 00e1 01       		.uleb128 0x1
 620 00e2 9C       		.byte	0x9c
 621 00e3 07       		.uleb128 0x7
 622 00e4 2E000000 		.4byte	.LASF19
 623 00e8 01       		.byte	0x1
 624 00e9 9301     		.2byte	0x193
 625 00eb 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 28


 626 00ef 0C000000 		.4byte	.LFE4-.LFB4
 627 00f3 01       		.uleb128 0x1
 628 00f4 9C       		.byte	0x9c
 629 00f5 08010000 		.4byte	0x108
 630 00f9 08       		.uleb128 0x8
 631 00fa AB000000 		.4byte	.LASF21
 632 00fe 01       		.byte	0x1
 633 00ff 9301     		.2byte	0x193
 634 0101 77000000 		.4byte	0x77
 635 0105 01       		.uleb128 0x1
 636 0106 50       		.byte	0x50
 637 0107 00       		.byte	0
 638 0108 09       		.uleb128 0x9
 639 0109 C7020000 		.4byte	.LASF27
 640 010d 01       		.byte	0x1
 641 010e A901     		.2byte	0x1a9
 642 0110 77000000 		.4byte	0x77
 643 0114 00000000 		.4byte	.LFB5
 644 0118 14000000 		.4byte	.LFE5-.LFB5
 645 011c 01       		.uleb128 0x1
 646 011d 9C       		.byte	0x9c
 647 011e 07       		.uleb128 0x7
 648 011f B5020000 		.4byte	.LASF20
 649 0123 01       		.byte	0x1
 650 0124 E201     		.2byte	0x1e2
 651 0126 00000000 		.4byte	.LFB7
 652 012a 0C000000 		.4byte	.LFE7-.LFB7
 653 012e 01       		.uleb128 0x1
 654 012f 9C       		.byte	0x9c
 655 0130 43010000 		.4byte	0x143
 656 0134 08       		.uleb128 0x8
 657 0135 41000000 		.4byte	.LASF22
 658 0139 01       		.byte	0x1
 659 013a E201     		.2byte	0x1e2
 660 013c 77000000 		.4byte	0x77
 661 0140 01       		.uleb128 0x1
 662 0141 50       		.byte	0x50
 663 0142 00       		.byte	0
 664 0143 07       		.uleb128 0x7
 665 0144 6C020000 		.4byte	.LASF23
 666 0148 01       		.byte	0x1
 667 0149 0402     		.2byte	0x204
 668 014b 00000000 		.4byte	.LFB8
 669 014f 0C000000 		.4byte	.LFE8-.LFB8
 670 0153 01       		.uleb128 0x1
 671 0154 9C       		.byte	0x9c
 672 0155 68010000 		.4byte	0x168
 673 0159 08       		.uleb128 0x8
 674 015a FE020000 		.4byte	.LASF24
 675 015e 01       		.byte	0x1
 676 015f 0402     		.2byte	0x204
 677 0161 77000000 		.4byte	0x77
 678 0165 01       		.uleb128 0x1
 679 0166 50       		.byte	0x50
 680 0167 00       		.byte	0
 681 0168 07       		.uleb128 0x7
 682 0169 0E010000 		.4byte	.LASF25
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 29


 683 016d 01       		.byte	0x1
 684 016e AC02     		.2byte	0x2ac
 685 0170 00000000 		.4byte	.LFB9
 686 0174 0C000000 		.4byte	.LFE9-.LFB9
 687 0178 01       		.uleb128 0x1
 688 0179 9C       		.byte	0x9c
 689 017a 8D010000 		.4byte	0x18d
 690 017e 08       		.uleb128 0x8
 691 017f A7020000 		.4byte	.LASF26
 692 0183 01       		.byte	0x1
 693 0184 AC02     		.2byte	0x2ac
 694 0186 6B000000 		.4byte	0x6b
 695 018a 01       		.uleb128 0x1
 696 018b 50       		.byte	0x50
 697 018c 00       		.byte	0
 698 018d 09       		.uleb128 0x9
 699 018e 8C000000 		.4byte	.LASF28
 700 0192 01       		.byte	0x1
 701 0193 C702     		.2byte	0x2c7
 702 0195 6B000000 		.4byte	0x6b
 703 0199 00000000 		.4byte	.LFB10
 704 019d 0C000000 		.4byte	.LFE10-.LFB10
 705 01a1 01       		.uleb128 0x1
 706 01a2 9C       		.byte	0x9c
 707 01a3 0A       		.uleb128 0xa
 708 01a4 8D020000 		.4byte	.LASF43
 709 01a8 01       		.byte	0x1
 710 01a9 E102     		.2byte	0x2e1
 711 01ab 6B000000 		.4byte	0x6b
 712 01af 00000000 		.4byte	.LFB11
 713 01b3 0C000000 		.4byte	.LFE11-.LFB11
 714 01b7 01       		.uleb128 0x1
 715 01b8 9C       		.byte	0x9c
 716 01b9 CC010000 		.4byte	0x1cc
 717 01bd 0B       		.uleb128 0xb
 718 01be 57020000 		.4byte	.LASF34
 719 01c2 01       		.byte	0x1
 720 01c3 E302     		.2byte	0x2e3
 721 01c5 6B000000 		.4byte	0x6b
 722 01c9 01       		.uleb128 0x1
 723 01ca 50       		.byte	0x50
 724 01cb 00       		.byte	0
 725 01cc 07       		.uleb128 0x7
 726 01cd 13000000 		.4byte	.LASF29
 727 01d1 01       		.byte	0x1
 728 01d2 FD02     		.2byte	0x2fd
 729 01d4 00000000 		.4byte	.LFB12
 730 01d8 0C000000 		.4byte	.LFE12-.LFB12
 731 01dc 01       		.uleb128 0x1
 732 01dd 9C       		.byte	0x9c
 733 01de F1010000 		.4byte	0x1f1
 734 01e2 08       		.uleb128 0x8
 735 01e3 06010000 		.4byte	.LASF30
 736 01e7 01       		.byte	0x1
 737 01e8 FD02     		.2byte	0x2fd
 738 01ea 6B000000 		.4byte	0x6b
 739 01ee 01       		.uleb128 0x1
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 30


 740 01ef 50       		.byte	0x50
 741 01f0 00       		.byte	0
 742 01f1 09       		.uleb128 0x9
 743 01f2 6B010000 		.4byte	.LASF31
 744 01f6 01       		.byte	0x1
 745 01f7 1603     		.2byte	0x316
 746 01f9 77000000 		.4byte	0x77
 747 01fd 00000000 		.4byte	.LFB13
 748 0201 0C000000 		.4byte	.LFE13-.LFB13
 749 0205 01       		.uleb128 0x1
 750 0206 9C       		.byte	0x9c
 751 0207 07       		.uleb128 0x7
 752 0208 48000000 		.4byte	.LASF32
 753 020c 01       		.byte	0x1
 754 020d C501     		.2byte	0x1c5
 755 020f 00000000 		.4byte	.LFB6
 756 0213 14000000 		.4byte	.LFE6-.LFB6
 757 0217 01       		.uleb128 0x1
 758 0218 9C       		.byte	0x9c
 759 0219 30020000 		.4byte	0x230
 760 021d 0C       		.uleb128 0xc
 761 021e 08000000 		.4byte	.LVL6
 762 0222 F1010000 		.4byte	0x1f1
 763 0226 0C       		.uleb128 0xc
 764 0227 0C000000 		.4byte	.LVL7
 765 022b 8D010000 		.4byte	0x18d
 766 022f 00       		.byte	0
 767 0230 0D       		.uleb128 0xd
 768 0231 84010000 		.4byte	.LASF33
 769 0235 01       		.byte	0x1
 770 0236 54       		.byte	0x54
 771 0237 00000000 		.4byte	.LFB1
 772 023b 60000000 		.4byte	.LFE1-.LFB1
 773 023f 01       		.uleb128 0x1
 774 0240 9C       		.byte	0x9c
 775 0241 D1020000 		.4byte	0x2d1
 776 0245 0E       		.uleb128 0xe
 777 0246 5E020000 		.4byte	.LASF35
 778 024a 01       		.byte	0x1
 779 024b 57       		.byte	0x57
 780 024c 6B000000 		.4byte	0x6b
 781 0250 00000000 		.4byte	.LLST0
 782 0254 0E       		.uleb128 0xe
 783 0255 3E010000 		.4byte	.LASF36
 784 0259 01       		.byte	0x1
 785 025a 5D       		.byte	0x5d
 786 025b 6B000000 		.4byte	0x6b
 787 025f 13000000 		.4byte	.LLST1
 788 0263 0F       		.uleb128 0xf
 789 0264 2C000000 		.4byte	.LVL10
 790 0268 E3000000 		.4byte	0xe3
 791 026c 78020000 		.4byte	0x278
 792 0270 10       		.uleb128 0x10
 793 0271 01       		.uleb128 0x1
 794 0272 50       		.byte	0x50
 795 0273 03       		.uleb128 0x3
 796 0274 0B       		.byte	0xb
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 31


 797 0275 60EA     		.2byte	0xea60
 798 0277 00       		.byte	0
 799 0278 0F       		.uleb128 0xf
 800 0279 34000000 		.4byte	.LVL11
 801 027d 1E010000 		.4byte	0x11e
 802 0281 8D020000 		.4byte	0x28d
 803 0285 10       		.uleb128 0x10
 804 0286 01       		.uleb128 0x1
 805 0287 50       		.byte	0x50
 806 0288 03       		.uleb128 0x3
 807 0289 0B       		.byte	0xb
 808 028a 60EA     		.2byte	0xea60
 809 028c 00       		.byte	0
 810 028d 0F       		.uleb128 0xf
 811 028e 3C000000 		.4byte	.LVL12
 812 0292 43010000 		.4byte	0x143
 813 0296 A2020000 		.4byte	0x2a2
 814 029a 10       		.uleb128 0x10
 815 029b 01       		.uleb128 0x1
 816 029c 50       		.byte	0x50
 817 029d 03       		.uleb128 0x3
 818 029e 0A       		.byte	0xa
 819 029f 3075     		.2byte	0x7530
 820 02a1 00       		.byte	0
 821 02a2 0F       		.uleb128 0xf
 822 02a3 42000000 		.4byte	.LVL13
 823 02a7 68010000 		.4byte	0x168
 824 02ab B5020000 		.4byte	0x2b5
 825 02af 10       		.uleb128 0x10
 826 02b0 01       		.uleb128 0x1
 827 02b1 50       		.byte	0x50
 828 02b2 01       		.uleb128 0x1
 829 02b3 34       		.byte	0x34
 830 02b4 00       		.byte	0
 831 02b5 0C       		.uleb128 0xc
 832 02b6 46000000 		.4byte	.LVL14
 833 02ba 36030000 		.4byte	0x336
 834 02be 0C       		.uleb128 0xc
 835 02bf 52000000 		.4byte	.LVL15
 836 02c3 41030000 		.4byte	0x341
 837 02c7 0C       		.uleb128 0xc
 838 02c8 56000000 		.4byte	.LVL16
 839 02cc 07020000 		.4byte	0x207
 840 02d0 00       		.byte	0
 841 02d1 0D       		.uleb128 0xd
 842 02d2 54030000 		.4byte	.LASF37
 843 02d6 01       		.byte	0x1
 844 02d7 37       		.byte	0x37
 845 02d8 00000000 		.4byte	.LFB0
 846 02dc 1C000000 		.4byte	.LFE0-.LFB0
 847 02e0 01       		.uleb128 0x1
 848 02e1 9C       		.byte	0x9c
 849 02e2 F9020000 		.4byte	0x2f9
 850 02e6 0C       		.uleb128 0xc
 851 02e7 0C000000 		.4byte	.LVL17
 852 02eb 30020000 		.4byte	0x230
 853 02ef 0C       		.uleb128 0xc
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 32


 854 02f0 16000000 		.4byte	.LVL18
 855 02f4 C1000000 		.4byte	0xc1
 856 02f8 00       		.byte	0
 857 02f9 09       		.uleb128 0x9
 858 02fa 25010000 		.4byte	.LASF38
 859 02fe 01       		.byte	0x1
 860 02ff 3003     		.2byte	0x330
 861 0301 77000000 		.4byte	0x77
 862 0305 00000000 		.4byte	.LFB14
 863 0309 0C000000 		.4byte	.LFE14-.LFB14
 864 030d 01       		.uleb128 0x1
 865 030e 9C       		.byte	0x9c
 866 030f 09       		.uleb128 0x9
 867 0310 DD000000 		.4byte	.LASF39
 868 0314 01       		.byte	0x1
 869 0315 7403     		.2byte	0x374
 870 0317 77000000 		.4byte	0x77
 871 031b 00000000 		.4byte	.LFB15
 872 031f 0C000000 		.4byte	.LFE15-.LFB15
 873 0323 01       		.uleb128 0x1
 874 0324 9C       		.byte	0x9c
 875 0325 11       		.uleb128 0x11
 876 0326 53010000 		.4byte	.LASF44
 877 032a 01       		.byte	0x1
 878 032b 20       		.byte	0x20
 879 032c 6B000000 		.4byte	0x6b
 880 0330 05       		.uleb128 0x5
 881 0331 03       		.byte	0x3
 882 0332 00000000 		.4byte	PWM_1_initVar
 883 0336 12       		.uleb128 0x12
 884 0337 1D020000 		.4byte	.LASF45
 885 033b 03       		.byte	0x3
 886 033c 7E       		.byte	0x7e
 887 033d 6B000000 		.4byte	0x6b
 888 0341 13       		.uleb128 0x13
 889 0342 41020000 		.4byte	.LASF46
 890 0346 03       		.byte	0x3
 891 0347 7F       		.byte	0x7f
 892 0348 14       		.uleb128 0x14
 893 0349 6B000000 		.4byte	0x6b
 894 034d 00       		.byte	0
 895 034e 00       		.byte	0
 896              		.section	.debug_abbrev,"",%progbits
 897              	.Ldebug_abbrev0:
 898 0000 01       		.uleb128 0x1
 899 0001 11       		.uleb128 0x11
 900 0002 01       		.byte	0x1
 901 0003 25       		.uleb128 0x25
 902 0004 0E       		.uleb128 0xe
 903 0005 13       		.uleb128 0x13
 904 0006 0B       		.uleb128 0xb
 905 0007 03       		.uleb128 0x3
 906 0008 0E       		.uleb128 0xe
 907 0009 1B       		.uleb128 0x1b
 908 000a 0E       		.uleb128 0xe
 909 000b 55       		.uleb128 0x55
 910 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 33


 911 000d 11       		.uleb128 0x11
 912 000e 01       		.uleb128 0x1
 913 000f 10       		.uleb128 0x10
 914 0010 17       		.uleb128 0x17
 915 0011 00       		.byte	0
 916 0012 00       		.byte	0
 917 0013 02       		.uleb128 0x2
 918 0014 24       		.uleb128 0x24
 919 0015 00       		.byte	0
 920 0016 0B       		.uleb128 0xb
 921 0017 0B       		.uleb128 0xb
 922 0018 3E       		.uleb128 0x3e
 923 0019 0B       		.uleb128 0xb
 924 001a 03       		.uleb128 0x3
 925 001b 0E       		.uleb128 0xe
 926 001c 00       		.byte	0
 927 001d 00       		.byte	0
 928 001e 03       		.uleb128 0x3
 929 001f 24       		.uleb128 0x24
 930 0020 00       		.byte	0
 931 0021 0B       		.uleb128 0xb
 932 0022 0B       		.uleb128 0xb
 933 0023 3E       		.uleb128 0x3e
 934 0024 0B       		.uleb128 0xb
 935 0025 03       		.uleb128 0x3
 936 0026 08       		.uleb128 0x8
 937 0027 00       		.byte	0
 938 0028 00       		.byte	0
 939 0029 04       		.uleb128 0x4
 940 002a 16       		.uleb128 0x16
 941 002b 00       		.byte	0
 942 002c 03       		.uleb128 0x3
 943 002d 0E       		.uleb128 0xe
 944 002e 3A       		.uleb128 0x3a
 945 002f 0B       		.uleb128 0xb
 946 0030 3B       		.uleb128 0x3b
 947 0031 05       		.uleb128 0x5
 948 0032 49       		.uleb128 0x49
 949 0033 13       		.uleb128 0x13
 950 0034 00       		.byte	0
 951 0035 00       		.byte	0
 952 0036 05       		.uleb128 0x5
 953 0037 35       		.uleb128 0x35
 954 0038 00       		.byte	0
 955 0039 49       		.uleb128 0x49
 956 003a 13       		.uleb128 0x13
 957 003b 00       		.byte	0
 958 003c 00       		.byte	0
 959 003d 06       		.uleb128 0x6
 960 003e 2E       		.uleb128 0x2e
 961 003f 00       		.byte	0
 962 0040 3F       		.uleb128 0x3f
 963 0041 19       		.uleb128 0x19
 964 0042 03       		.uleb128 0x3
 965 0043 0E       		.uleb128 0xe
 966 0044 3A       		.uleb128 0x3a
 967 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 34


 968 0046 3B       		.uleb128 0x3b
 969 0047 0B       		.uleb128 0xb
 970 0048 27       		.uleb128 0x27
 971 0049 19       		.uleb128 0x19
 972 004a 11       		.uleb128 0x11
 973 004b 01       		.uleb128 0x1
 974 004c 12       		.uleb128 0x12
 975 004d 06       		.uleb128 0x6
 976 004e 40       		.uleb128 0x40
 977 004f 18       		.uleb128 0x18
 978 0050 9742     		.uleb128 0x2117
 979 0052 19       		.uleb128 0x19
 980 0053 00       		.byte	0
 981 0054 00       		.byte	0
 982 0055 07       		.uleb128 0x7
 983 0056 2E       		.uleb128 0x2e
 984 0057 01       		.byte	0x1
 985 0058 3F       		.uleb128 0x3f
 986 0059 19       		.uleb128 0x19
 987 005a 03       		.uleb128 0x3
 988 005b 0E       		.uleb128 0xe
 989 005c 3A       		.uleb128 0x3a
 990 005d 0B       		.uleb128 0xb
 991 005e 3B       		.uleb128 0x3b
 992 005f 05       		.uleb128 0x5
 993 0060 27       		.uleb128 0x27
 994 0061 19       		.uleb128 0x19
 995 0062 11       		.uleb128 0x11
 996 0063 01       		.uleb128 0x1
 997 0064 12       		.uleb128 0x12
 998 0065 06       		.uleb128 0x6
 999 0066 40       		.uleb128 0x40
 1000 0067 18       		.uleb128 0x18
 1001 0068 9742     		.uleb128 0x2117
 1002 006a 19       		.uleb128 0x19
 1003 006b 01       		.uleb128 0x1
 1004 006c 13       		.uleb128 0x13
 1005 006d 00       		.byte	0
 1006 006e 00       		.byte	0
 1007 006f 08       		.uleb128 0x8
 1008 0070 05       		.uleb128 0x5
 1009 0071 00       		.byte	0
 1010 0072 03       		.uleb128 0x3
 1011 0073 0E       		.uleb128 0xe
 1012 0074 3A       		.uleb128 0x3a
 1013 0075 0B       		.uleb128 0xb
 1014 0076 3B       		.uleb128 0x3b
 1015 0077 05       		.uleb128 0x5
 1016 0078 49       		.uleb128 0x49
 1017 0079 13       		.uleb128 0x13
 1018 007a 02       		.uleb128 0x2
 1019 007b 18       		.uleb128 0x18
 1020 007c 00       		.byte	0
 1021 007d 00       		.byte	0
 1022 007e 09       		.uleb128 0x9
 1023 007f 2E       		.uleb128 0x2e
 1024 0080 00       		.byte	0
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 35


 1025 0081 3F       		.uleb128 0x3f
 1026 0082 19       		.uleb128 0x19
 1027 0083 03       		.uleb128 0x3
 1028 0084 0E       		.uleb128 0xe
 1029 0085 3A       		.uleb128 0x3a
 1030 0086 0B       		.uleb128 0xb
 1031 0087 3B       		.uleb128 0x3b
 1032 0088 05       		.uleb128 0x5
 1033 0089 27       		.uleb128 0x27
 1034 008a 19       		.uleb128 0x19
 1035 008b 49       		.uleb128 0x49
 1036 008c 13       		.uleb128 0x13
 1037 008d 11       		.uleb128 0x11
 1038 008e 01       		.uleb128 0x1
 1039 008f 12       		.uleb128 0x12
 1040 0090 06       		.uleb128 0x6
 1041 0091 40       		.uleb128 0x40
 1042 0092 18       		.uleb128 0x18
 1043 0093 9742     		.uleb128 0x2117
 1044 0095 19       		.uleb128 0x19
 1045 0096 00       		.byte	0
 1046 0097 00       		.byte	0
 1047 0098 0A       		.uleb128 0xa
 1048 0099 2E       		.uleb128 0x2e
 1049 009a 01       		.byte	0x1
 1050 009b 3F       		.uleb128 0x3f
 1051 009c 19       		.uleb128 0x19
 1052 009d 03       		.uleb128 0x3
 1053 009e 0E       		.uleb128 0xe
 1054 009f 3A       		.uleb128 0x3a
 1055 00a0 0B       		.uleb128 0xb
 1056 00a1 3B       		.uleb128 0x3b
 1057 00a2 05       		.uleb128 0x5
 1058 00a3 27       		.uleb128 0x27
 1059 00a4 19       		.uleb128 0x19
 1060 00a5 49       		.uleb128 0x49
 1061 00a6 13       		.uleb128 0x13
 1062 00a7 11       		.uleb128 0x11
 1063 00a8 01       		.uleb128 0x1
 1064 00a9 12       		.uleb128 0x12
 1065 00aa 06       		.uleb128 0x6
 1066 00ab 40       		.uleb128 0x40
 1067 00ac 18       		.uleb128 0x18
 1068 00ad 9742     		.uleb128 0x2117
 1069 00af 19       		.uleb128 0x19
 1070 00b0 01       		.uleb128 0x1
 1071 00b1 13       		.uleb128 0x13
 1072 00b2 00       		.byte	0
 1073 00b3 00       		.byte	0
 1074 00b4 0B       		.uleb128 0xb
 1075 00b5 34       		.uleb128 0x34
 1076 00b6 00       		.byte	0
 1077 00b7 03       		.uleb128 0x3
 1078 00b8 0E       		.uleb128 0xe
 1079 00b9 3A       		.uleb128 0x3a
 1080 00ba 0B       		.uleb128 0xb
 1081 00bb 3B       		.uleb128 0x3b
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 36


 1082 00bc 05       		.uleb128 0x5
 1083 00bd 49       		.uleb128 0x49
 1084 00be 13       		.uleb128 0x13
 1085 00bf 02       		.uleb128 0x2
 1086 00c0 18       		.uleb128 0x18
 1087 00c1 00       		.byte	0
 1088 00c2 00       		.byte	0
 1089 00c3 0C       		.uleb128 0xc
 1090 00c4 898201   		.uleb128 0x4109
 1091 00c7 00       		.byte	0
 1092 00c8 11       		.uleb128 0x11
 1093 00c9 01       		.uleb128 0x1
 1094 00ca 31       		.uleb128 0x31
 1095 00cb 13       		.uleb128 0x13
 1096 00cc 00       		.byte	0
 1097 00cd 00       		.byte	0
 1098 00ce 0D       		.uleb128 0xd
 1099 00cf 2E       		.uleb128 0x2e
 1100 00d0 01       		.byte	0x1
 1101 00d1 3F       		.uleb128 0x3f
 1102 00d2 19       		.uleb128 0x19
 1103 00d3 03       		.uleb128 0x3
 1104 00d4 0E       		.uleb128 0xe
 1105 00d5 3A       		.uleb128 0x3a
 1106 00d6 0B       		.uleb128 0xb
 1107 00d7 3B       		.uleb128 0x3b
 1108 00d8 0B       		.uleb128 0xb
 1109 00d9 27       		.uleb128 0x27
 1110 00da 19       		.uleb128 0x19
 1111 00db 11       		.uleb128 0x11
 1112 00dc 01       		.uleb128 0x1
 1113 00dd 12       		.uleb128 0x12
 1114 00de 06       		.uleb128 0x6
 1115 00df 40       		.uleb128 0x40
 1116 00e0 18       		.uleb128 0x18
 1117 00e1 9742     		.uleb128 0x2117
 1118 00e3 19       		.uleb128 0x19
 1119 00e4 01       		.uleb128 0x1
 1120 00e5 13       		.uleb128 0x13
 1121 00e6 00       		.byte	0
 1122 00e7 00       		.byte	0
 1123 00e8 0E       		.uleb128 0xe
 1124 00e9 34       		.uleb128 0x34
 1125 00ea 00       		.byte	0
 1126 00eb 03       		.uleb128 0x3
 1127 00ec 0E       		.uleb128 0xe
 1128 00ed 3A       		.uleb128 0x3a
 1129 00ee 0B       		.uleb128 0xb
 1130 00ef 3B       		.uleb128 0x3b
 1131 00f0 0B       		.uleb128 0xb
 1132 00f1 49       		.uleb128 0x49
 1133 00f2 13       		.uleb128 0x13
 1134 00f3 02       		.uleb128 0x2
 1135 00f4 17       		.uleb128 0x17
 1136 00f5 00       		.byte	0
 1137 00f6 00       		.byte	0
 1138 00f7 0F       		.uleb128 0xf
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 37


 1139 00f8 898201   		.uleb128 0x4109
 1140 00fb 01       		.byte	0x1
 1141 00fc 11       		.uleb128 0x11
 1142 00fd 01       		.uleb128 0x1
 1143 00fe 31       		.uleb128 0x31
 1144 00ff 13       		.uleb128 0x13
 1145 0100 01       		.uleb128 0x1
 1146 0101 13       		.uleb128 0x13
 1147 0102 00       		.byte	0
 1148 0103 00       		.byte	0
 1149 0104 10       		.uleb128 0x10
 1150 0105 8A8201   		.uleb128 0x410a
 1151 0108 00       		.byte	0
 1152 0109 02       		.uleb128 0x2
 1153 010a 18       		.uleb128 0x18
 1154 010b 9142     		.uleb128 0x2111
 1155 010d 18       		.uleb128 0x18
 1156 010e 00       		.byte	0
 1157 010f 00       		.byte	0
 1158 0110 11       		.uleb128 0x11
 1159 0111 34       		.uleb128 0x34
 1160 0112 00       		.byte	0
 1161 0113 03       		.uleb128 0x3
 1162 0114 0E       		.uleb128 0xe
 1163 0115 3A       		.uleb128 0x3a
 1164 0116 0B       		.uleb128 0xb
 1165 0117 3B       		.uleb128 0x3b
 1166 0118 0B       		.uleb128 0xb
 1167 0119 49       		.uleb128 0x49
 1168 011a 13       		.uleb128 0x13
 1169 011b 3F       		.uleb128 0x3f
 1170 011c 19       		.uleb128 0x19
 1171 011d 02       		.uleb128 0x2
 1172 011e 18       		.uleb128 0x18
 1173 011f 00       		.byte	0
 1174 0120 00       		.byte	0
 1175 0121 12       		.uleb128 0x12
 1176 0122 2E       		.uleb128 0x2e
 1177 0123 00       		.byte	0
 1178 0124 3F       		.uleb128 0x3f
 1179 0125 19       		.uleb128 0x19
 1180 0126 03       		.uleb128 0x3
 1181 0127 0E       		.uleb128 0xe
 1182 0128 3A       		.uleb128 0x3a
 1183 0129 0B       		.uleb128 0xb
 1184 012a 3B       		.uleb128 0x3b
 1185 012b 0B       		.uleb128 0xb
 1186 012c 27       		.uleb128 0x27
 1187 012d 19       		.uleb128 0x19
 1188 012e 49       		.uleb128 0x49
 1189 012f 13       		.uleb128 0x13
 1190 0130 3C       		.uleb128 0x3c
 1191 0131 19       		.uleb128 0x19
 1192 0132 00       		.byte	0
 1193 0133 00       		.byte	0
 1194 0134 13       		.uleb128 0x13
 1195 0135 2E       		.uleb128 0x2e
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 38


 1196 0136 01       		.byte	0x1
 1197 0137 3F       		.uleb128 0x3f
 1198 0138 19       		.uleb128 0x19
 1199 0139 03       		.uleb128 0x3
 1200 013a 0E       		.uleb128 0xe
 1201 013b 3A       		.uleb128 0x3a
 1202 013c 0B       		.uleb128 0xb
 1203 013d 3B       		.uleb128 0x3b
 1204 013e 0B       		.uleb128 0xb
 1205 013f 27       		.uleb128 0x27
 1206 0140 19       		.uleb128 0x19
 1207 0141 3C       		.uleb128 0x3c
 1208 0142 19       		.uleb128 0x19
 1209 0143 00       		.byte	0
 1210 0144 00       		.byte	0
 1211 0145 14       		.uleb128 0x14
 1212 0146 05       		.uleb128 0x5
 1213 0147 00       		.byte	0
 1214 0148 49       		.uleb128 0x49
 1215 0149 13       		.uleb128 0x13
 1216 014a 00       		.byte	0
 1217 014b 00       		.byte	0
 1218 014c 00       		.byte	0
 1219              		.section	.debug_loc,"",%progbits
 1220              	.Ldebug_loc0:
 1221              	.LLST0:
 1222 0000 0A000000 		.4byte	.LVL8
 1223 0004 0E000000 		.4byte	.LVL9
 1224 0008 0100     		.2byte	0x1
 1225 000a 53       		.byte	0x53
 1226 000b 00000000 		.4byte	0
 1227 000f 00000000 		.4byte	0
 1228              	.LLST1:
 1229 0013 46000000 		.4byte	.LVL14
 1230 0017 51000000 		.4byte	.LVL15-1
 1231 001b 0100     		.2byte	0x1
 1232 001d 50       		.byte	0x50
 1233 001e 00000000 		.4byte	0
 1234 0022 00000000 		.4byte	0
 1235              		.section	.debug_aranges,"",%progbits
 1236 0000 94000000 		.4byte	0x94
 1237 0004 0200     		.2byte	0x2
 1238 0006 00000000 		.4byte	.Ldebug_info0
 1239 000a 04       		.byte	0x4
 1240 000b 00       		.byte	0
 1241 000c 0000     		.2byte	0
 1242 000e 0000     		.2byte	0
 1243 0010 00000000 		.4byte	.LFB2
 1244 0014 10000000 		.4byte	.LFE2-.LFB2
 1245 0018 00000000 		.4byte	.LFB3
 1246 001c 10000000 		.4byte	.LFE3-.LFB3
 1247 0020 00000000 		.4byte	.LFB4
 1248 0024 0C000000 		.4byte	.LFE4-.LFB4
 1249 0028 00000000 		.4byte	.LFB5
 1250 002c 14000000 		.4byte	.LFE5-.LFB5
 1251 0030 00000000 		.4byte	.LFB7
 1252 0034 0C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 39


 1253 0038 00000000 		.4byte	.LFB8
 1254 003c 0C000000 		.4byte	.LFE8-.LFB8
 1255 0040 00000000 		.4byte	.LFB9
 1256 0044 0C000000 		.4byte	.LFE9-.LFB9
 1257 0048 00000000 		.4byte	.LFB10
 1258 004c 0C000000 		.4byte	.LFE10-.LFB10
 1259 0050 00000000 		.4byte	.LFB11
 1260 0054 0C000000 		.4byte	.LFE11-.LFB11
 1261 0058 00000000 		.4byte	.LFB12
 1262 005c 0C000000 		.4byte	.LFE12-.LFB12
 1263 0060 00000000 		.4byte	.LFB13
 1264 0064 0C000000 		.4byte	.LFE13-.LFB13
 1265 0068 00000000 		.4byte	.LFB6
 1266 006c 14000000 		.4byte	.LFE6-.LFB6
 1267 0070 00000000 		.4byte	.LFB1
 1268 0074 60000000 		.4byte	.LFE1-.LFB1
 1269 0078 00000000 		.4byte	.LFB0
 1270 007c 1C000000 		.4byte	.LFE0-.LFB0
 1271 0080 00000000 		.4byte	.LFB14
 1272 0084 0C000000 		.4byte	.LFE14-.LFB14
 1273 0088 00000000 		.4byte	.LFB15
 1274 008c 0C000000 		.4byte	.LFE15-.LFB15
 1275 0090 00000000 		.4byte	0
 1276 0094 00000000 		.4byte	0
 1277              		.section	.debug_ranges,"",%progbits
 1278              	.Ldebug_ranges0:
 1279 0000 00000000 		.4byte	.LFB2
 1280 0004 10000000 		.4byte	.LFE2
 1281 0008 00000000 		.4byte	.LFB3
 1282 000c 10000000 		.4byte	.LFE3
 1283 0010 00000000 		.4byte	.LFB4
 1284 0014 0C000000 		.4byte	.LFE4
 1285 0018 00000000 		.4byte	.LFB5
 1286 001c 14000000 		.4byte	.LFE5
 1287 0020 00000000 		.4byte	.LFB7
 1288 0024 0C000000 		.4byte	.LFE7
 1289 0028 00000000 		.4byte	.LFB8
 1290 002c 0C000000 		.4byte	.LFE8
 1291 0030 00000000 		.4byte	.LFB9
 1292 0034 0C000000 		.4byte	.LFE9
 1293 0038 00000000 		.4byte	.LFB10
 1294 003c 0C000000 		.4byte	.LFE10
 1295 0040 00000000 		.4byte	.LFB11
 1296 0044 0C000000 		.4byte	.LFE11
 1297 0048 00000000 		.4byte	.LFB12
 1298 004c 0C000000 		.4byte	.LFE12
 1299 0050 00000000 		.4byte	.LFB13
 1300 0054 0C000000 		.4byte	.LFE13
 1301 0058 00000000 		.4byte	.LFB6
 1302 005c 14000000 		.4byte	.LFE6
 1303 0060 00000000 		.4byte	.LFB1
 1304 0064 60000000 		.4byte	.LFE1
 1305 0068 00000000 		.4byte	.LFB0
 1306 006c 1C000000 		.4byte	.LFE0
 1307 0070 00000000 		.4byte	.LFB14
 1308 0074 0C000000 		.4byte	.LFE14
 1309 0078 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 40


 1310 007c 0C000000 		.4byte	.LFE15
 1311 0080 00000000 		.4byte	0
 1312 0084 00000000 		.4byte	0
 1313              		.section	.debug_line,"",%progbits
 1314              	.Ldebug_line0:
 1315 0000 86010000 		.section	.debug_str,"MS",%progbits,1
 1315      02004F00 
 1315      00000201 
 1315      FB0E0D00 
 1315      01010101 
 1316              	.LASF15:
 1317 0000 72656731 		.ascii	"reg16\000"
 1317      3600
 1318              	.LASF17:
 1319 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1319      315F456E 
 1319      61626C65 
 1319      00
 1320              	.LASF29:
 1321 0013 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1321      315F5772 
 1321      69746543 
 1321      6F6E7472 
 1321      6F6C5265 
 1322              	.LASF19:
 1323 002e 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1323      315F5772 
 1323      69746543 
 1323      6F756E74 
 1323      657200
 1324              	.LASF22:
 1325 0041 70657269 		.ascii	"period\000"
 1325      6F6400
 1326              	.LASF32:
 1327 0048 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1327      315F436C 
 1327      65617246 
 1327      49464F00 
 1328              	.LASF3:
 1329 0058 73686F72 		.ascii	"short unsigned int\000"
 1329      7420756E 
 1329      7369676E 
 1329      65642069 
 1329      6E7400
 1330              	.LASF41:
 1331 006b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1331      6E657261 
 1331      7465645F 
 1331      536F7572 
 1331      63655C50 
 1332              	.LASF28:
 1333 008c 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1333      315F5265 
 1333      61645374 
 1333      61747573 
 1333      52656769 
 1334              	.LASF11:
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 41


 1335 00a5 666C6F61 		.ascii	"float\000"
 1335      7400
 1336              	.LASF21:
 1337 00ab 636F756E 		.ascii	"counter\000"
 1337      74657200 
 1338              	.LASF7:
 1339 00b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1339      206C6F6E 
 1339      6720756E 
 1339      7369676E 
 1339      65642069 
 1340              	.LASF1:
 1341 00ca 756E7369 		.ascii	"unsigned char\000"
 1341      676E6564 
 1341      20636861 
 1341      7200
 1342              	.LASF14:
 1343 00d8 72656738 		.ascii	"reg8\000"
 1343      00
 1344              	.LASF39:
 1345 00dd 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1345      315F5265 
 1345      61645065 
 1345      72696F64 
 1345      00
 1346              	.LASF5:
 1347 00ee 6C6F6E67 		.ascii	"long unsigned int\000"
 1347      20756E73 
 1347      69676E65 
 1347      6420696E 
 1347      7400
 1348              	.LASF9:
 1349 0100 75696E74 		.ascii	"uint8\000"
 1349      3800
 1350              	.LASF30:
 1351 0106 636F6E74 		.ascii	"control\000"
 1351      726F6C00 
 1352              	.LASF25:
 1353 010e 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1353      315F5365 
 1353      74496E74 
 1353      65727275 
 1353      70744D6F 
 1354              	.LASF38:
 1355 0125 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1355      315F5265 
 1355      6164436F 
 1355      6D706172 
 1355      6500
 1356              	.LASF12:
 1357 0137 646F7562 		.ascii	"double\000"
 1357      6C6500
 1358              	.LASF36:
 1359 013e 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1359      315F696E 
 1359      74657272 
 1359      75707453 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 42


 1359      74617465 
 1360              	.LASF44:
 1361 0153 50574D5F 		.ascii	"PWM_1_initVar\000"
 1361      315F696E 
 1361      69745661 
 1361      7200
 1362              	.LASF2:
 1363 0161 73686F72 		.ascii	"short int\000"
 1363      7420696E 
 1363      7400
 1364              	.LASF31:
 1365 016b 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1365      315F5265 
 1365      61644361 
 1365      70747572 
 1365      6500
 1366              	.LASF10:
 1367 017d 75696E74 		.ascii	"uint16\000"
 1367      313600
 1368              	.LASF33:
 1369 0184 50574D5F 		.ascii	"PWM_1_Init\000"
 1369      315F496E 
 1369      697400
 1370              	.LASF40:
 1371 018f 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1371      4320342E 
 1371      392E3320 
 1371      32303135 
 1371      30333033 
 1372 01c2 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1372      20726576 
 1372      6973696F 
 1372      6E203232 
 1372      31323230 
 1373 01f5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1373      66756E63 
 1373      74696F6E 
 1373      2D736563 
 1373      74696F6E 
 1374              	.LASF45:
 1375 021d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1375      74657243 
 1375      72697469 
 1375      63616C53 
 1375      65637469 
 1376              	.LASF8:
 1377 0234 756E7369 		.ascii	"unsigned int\000"
 1377      676E6564 
 1377      20696E74 
 1377      00
 1378              	.LASF46:
 1379 0241 43794578 		.ascii	"CyExitCriticalSection\000"
 1379      69744372 
 1379      69746963 
 1379      616C5365 
 1379      6374696F 
 1380              	.LASF34:
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 43


 1381 0257 72657375 		.ascii	"result\000"
 1381      6C7400
 1382              	.LASF35:
 1383 025e 6374726C 		.ascii	"ctrl\000"
 1383      00
 1384              	.LASF16:
 1385 0263 73697A65 		.ascii	"sizetype\000"
 1385      74797065 
 1385      00
 1386              	.LASF23:
 1387 026c 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1387      315F5772 
 1387      69746543 
 1387      6F6D7061 
 1387      726500
 1388              	.LASF6:
 1389 027f 6C6F6E67 		.ascii	"long long int\000"
 1389      206C6F6E 
 1389      6720696E 
 1389      7400
 1390              	.LASF43:
 1391 028d 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1391      315F5265 
 1391      6164436F 
 1391      6E74726F 
 1391      6C526567 
 1392              	.LASF26:
 1393 02a7 696E7465 		.ascii	"interruptMode\000"
 1393      72727570 
 1393      744D6F64 
 1393      6500
 1394              	.LASF20:
 1395 02b5 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1395      315F5772 
 1395      69746550 
 1395      6572696F 
 1395      6400
 1396              	.LASF27:
 1397 02c7 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1397      315F5265 
 1397      6164436F 
 1397      756E7465 
 1397      7200
 1398              	.LASF18:
 1399 02d9 50574D5F 		.ascii	"PWM_1_Stop\000"
 1399      315F5374 
 1399      6F7000
 1400              	.LASF4:
 1401 02e4 6C6F6E67 		.ascii	"long int\000"
 1401      20696E74 
 1401      00
 1402              	.LASF13:
 1403 02ed 63686172 		.ascii	"char\000"
 1403      00
 1404              	.LASF0:
 1405 02f2 7369676E 		.ascii	"signed char\000"
 1405      65642063 
ARM GAS  C:\Users\user\AppData\Local\Temp\cc1MuWec.s 			page 44


 1405      68617200 
 1406              	.LASF24:
 1407 02fe 636F6D70 		.ascii	"compare\000"
 1407      61726500 
 1408              	.LASF42:
 1409 0306 443A5C55 		.ascii	"D:\\Utilisateurs\\user\\Documents\\PSoC Creator\\Wo"
 1409      74696C69 
 1409      73617465 
 1409      7572735C 
 1409      75736572 
 1410 0334 726B7370 		.ascii	"rkspace02\\TP1_MESURE_FREQ.cydsn\000"
 1410      61636530 
 1410      325C5450 
 1410      315F4D45 
 1410      53555245 
 1411              	.LASF37:
 1412 0354 50574D5F 		.ascii	"PWM_1_Start\000"
 1412      315F5374 
 1412      61727400 
 1413              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
